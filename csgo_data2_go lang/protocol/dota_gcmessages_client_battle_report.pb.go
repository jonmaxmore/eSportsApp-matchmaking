// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_client_battle_report.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CMsgBattleReport_HighlightType int32

const (
	CMsgBattleReport_HighlightType_k_eHighlightTypeInvalid            CMsgBattleReport_HighlightType = -1
	CMsgBattleReport_HighlightType_k_eGameWinrate                     CMsgBattleReport_HighlightType = 0
	CMsgBattleReport_HighlightType_k_eLaneWinrate                     CMsgBattleReport_HighlightType = 1
	CMsgBattleReport_HighlightType_k_eMMRDelta                        CMsgBattleReport_HighlightType = 2
	CMsgBattleReport_HighlightType_k_eNumHeroesPlayed                 CMsgBattleReport_HighlightType = 3
	CMsgBattleReport_HighlightType_k_eNumGamesPlayed                  CMsgBattleReport_HighlightType = 4
	CMsgBattleReport_HighlightType_k_eAveragePowerRunesTaken          CMsgBattleReport_HighlightType = 5
	CMsgBattleReport_HighlightType_k_eAverageBountyRunesTaken         CMsgBattleReport_HighlightType = 6
	CMsgBattleReport_HighlightType_k_eTotalKillEnemyT1First           CMsgBattleReport_HighlightType = 7
	CMsgBattleReport_HighlightType_k_eTotalRoshanKills                CMsgBattleReport_HighlightType = 8
	CMsgBattleReport_HighlightType_k_eTotalDewards                    CMsgBattleReport_HighlightType = 9
	CMsgBattleReport_HighlightType_k_eTotalCampsStacked               CMsgBattleReport_HighlightType = 10
	CMsgBattleReport_HighlightType_k_eMaxWinstreak                    CMsgBattleReport_HighlightType = 11
	CMsgBattleReport_HighlightType_k_eAverageDewards                  CMsgBattleReport_HighlightType = 12
	CMsgBattleReport_HighlightType_k_eAverageKills                    CMsgBattleReport_HighlightType = 13
	CMsgBattleReport_HighlightType_k_eMaxKills                        CMsgBattleReport_HighlightType = 14
	CMsgBattleReport_HighlightType_k_eAverageAssists                  CMsgBattleReport_HighlightType = 15
	CMsgBattleReport_HighlightType_k_eMaxAssists                      CMsgBattleReport_HighlightType = 16
	CMsgBattleReport_HighlightType_k_eAverageDeaths                   CMsgBattleReport_HighlightType = 17
	CMsgBattleReport_HighlightType_k_eMinDeaths                       CMsgBattleReport_HighlightType = 18
	CMsgBattleReport_HighlightType_k_eAverageCampsStacked             CMsgBattleReport_HighlightType = 19
	CMsgBattleReport_HighlightType_k_eTotalLastHits                   CMsgBattleReport_HighlightType = 20
	CMsgBattleReport_HighlightType_k_eAverageLastHits                 CMsgBattleReport_HighlightType = 21
	CMsgBattleReport_HighlightType_k_eTotalDenies                     CMsgBattleReport_HighlightType = 22
	CMsgBattleReport_HighlightType_k_eAverageDenies                   CMsgBattleReport_HighlightType = 23
	CMsgBattleReport_HighlightType_k_eTotalGamesWithRoshanAdvantage   CMsgBattleReport_HighlightType = 24
	CMsgBattleReport_HighlightType_k_ePercentGamesWithRoshanAdvantage CMsgBattleReport_HighlightType = 25
	CMsgBattleReport_HighlightType_k_eAverageStunDuration             CMsgBattleReport_HighlightType = 26
	CMsgBattleReport_HighlightType_k_eTotalStunDuration               CMsgBattleReport_HighlightType = 27
	CMsgBattleReport_HighlightType_k_eAverageTeleportsUsed            CMsgBattleReport_HighlightType = 28
	CMsgBattleReport_HighlightType_k_eTotalTeleportsUsed              CMsgBattleReport_HighlightType = 29
	CMsgBattleReport_HighlightType_k_eAverageHeroDamage               CMsgBattleReport_HighlightType = 30
	CMsgBattleReport_HighlightType_k_eTotalHeroDamage                 CMsgBattleReport_HighlightType = 31
	CMsgBattleReport_HighlightType_k_eAverageHeroHealing              CMsgBattleReport_HighlightType = 32
	CMsgBattleReport_HighlightType_k_eTotalHeroHealing                CMsgBattleReport_HighlightType = 33
	CMsgBattleReport_HighlightType_k_eAverageTowerDamage              CMsgBattleReport_HighlightType = 34
	CMsgBattleReport_HighlightType_k_eTotalTowerDamage                CMsgBattleReport_HighlightType = 35
	CMsgBattleReport_HighlightType_k_eMaxLossStreak                   CMsgBattleReport_HighlightType = 36
	CMsgBattleReport_HighlightType_k_eAverageGameDuration             CMsgBattleReport_HighlightType = 37
	CMsgBattleReport_HighlightType_k_eMaxGameDuration                 CMsgBattleReport_HighlightType = 38
	CMsgBattleReport_HighlightType_k_eMinGameDuration                 CMsgBattleReport_HighlightType = 39
	CMsgBattleReport_HighlightType_k_eAverageWinDuration              CMsgBattleReport_HighlightType = 40
	CMsgBattleReport_HighlightType_k_eMaxWinDuration                  CMsgBattleReport_HighlightType = 41
	CMsgBattleReport_HighlightType_k_eMinWinDuration                  CMsgBattleReport_HighlightType = 42
	CMsgBattleReport_HighlightType_k_eAverageLossDuration             CMsgBattleReport_HighlightType = 43
	CMsgBattleReport_HighlightType_k_eMaxLossDuration                 CMsgBattleReport_HighlightType = 44
	CMsgBattleReport_HighlightType_k_eMinLossDuration                 CMsgBattleReport_HighlightType = 45
	CMsgBattleReport_HighlightType_k_ePctGamesEnemyT1TakenFirst       CMsgBattleReport_HighlightType = 46
	CMsgBattleReport_HighlightType_k_eMaxCampsStacked                 CMsgBattleReport_HighlightType = 47
	CMsgBattleReport_HighlightType_k_eMaxDewards                      CMsgBattleReport_HighlightType = 48
	CMsgBattleReport_HighlightType_k_eMaxRoshanKills                  CMsgBattleReport_HighlightType = 49
	CMsgBattleReport_HighlightType_k_eMaxBountyRunesTaken             CMsgBattleReport_HighlightType = 50
	CMsgBattleReport_HighlightType_k_eMaxPowerRunesTaken              CMsgBattleReport_HighlightType = 51
	CMsgBattleReport_HighlightType_k_eMaxDeaths                       CMsgBattleReport_HighlightType = 52
	CMsgBattleReport_HighlightType_k_eMaxLastHits                     CMsgBattleReport_HighlightType = 53
	CMsgBattleReport_HighlightType_k_eMaxDenies                       CMsgBattleReport_HighlightType = 54
	CMsgBattleReport_HighlightType_k_eRadiantWinRate                  CMsgBattleReport_HighlightType = 55
	CMsgBattleReport_HighlightType_k_eDireWinRate                     CMsgBattleReport_HighlightType = 56
	CMsgBattleReport_HighlightType_k_eRadiantGameCount                CMsgBattleReport_HighlightType = 57
	CMsgBattleReport_HighlightType_k_eDireGameCount                   CMsgBattleReport_HighlightType = 58
	CMsgBattleReport_HighlightType_k_eMaxDamage                       CMsgBattleReport_HighlightType = 59
	CMsgBattleReport_HighlightType_k_eMaxHealing                      CMsgBattleReport_HighlightType = 60
	CMsgBattleReport_HighlightType_k_eMaxTowerDamage                  CMsgBattleReport_HighlightType = 61
	CMsgBattleReport_HighlightType_k_eAverageGPM                      CMsgBattleReport_HighlightType = 62
	CMsgBattleReport_HighlightType_k_eMaxGPM                          CMsgBattleReport_HighlightType = 63
	CMsgBattleReport_HighlightType_k_eAverageXPM                      CMsgBattleReport_HighlightType = 64
	CMsgBattleReport_HighlightType_k_eMaxXPM                          CMsgBattleReport_HighlightType = 65
)

var CMsgBattleReport_HighlightType_name = map[int32]string{
	-1: "k_eHighlightTypeInvalid",
	0:  "k_eGameWinrate",
	1:  "k_eLaneWinrate",
	2:  "k_eMMRDelta",
	3:  "k_eNumHeroesPlayed",
	4:  "k_eNumGamesPlayed",
	5:  "k_eAveragePowerRunesTaken",
	6:  "k_eAverageBountyRunesTaken",
	7:  "k_eTotalKillEnemyT1First",
	8:  "k_eTotalRoshanKills",
	9:  "k_eTotalDewards",
	10: "k_eTotalCampsStacked",
	11: "k_eMaxWinstreak",
	12: "k_eAverageDewards",
	13: "k_eAverageKills",
	14: "k_eMaxKills",
	15: "k_eAverageAssists",
	16: "k_eMaxAssists",
	17: "k_eAverageDeaths",
	18: "k_eMinDeaths",
	19: "k_eAverageCampsStacked",
	20: "k_eTotalLastHits",
	21: "k_eAverageLastHits",
	22: "k_eTotalDenies",
	23: "k_eAverageDenies",
	24: "k_eTotalGamesWithRoshanAdvantage",
	25: "k_ePercentGamesWithRoshanAdvantage",
	26: "k_eAverageStunDuration",
	27: "k_eTotalStunDuration",
	28: "k_eAverageTeleportsUsed",
	29: "k_eTotalTeleportsUsed",
	30: "k_eAverageHeroDamage",
	31: "k_eTotalHeroDamage",
	32: "k_eAverageHeroHealing",
	33: "k_eTotalHeroHealing",
	34: "k_eAverageTowerDamage",
	35: "k_eTotalTowerDamage",
	36: "k_eMaxLossStreak",
	37: "k_eAverageGameDuration",
	38: "k_eMaxGameDuration",
	39: "k_eMinGameDuration",
	40: "k_eAverageWinDuration",
	41: "k_eMaxWinDuration",
	42: "k_eMinWinDuration",
	43: "k_eAverageLossDuration",
	44: "k_eMaxLossDuration",
	45: "k_eMinLossDuration",
	46: "k_ePctGamesEnemyT1TakenFirst",
	47: "k_eMaxCampsStacked",
	48: "k_eMaxDewards",
	49: "k_eMaxRoshanKills",
	50: "k_eMaxBountyRunesTaken",
	51: "k_eMaxPowerRunesTaken",
	52: "k_eMaxDeaths",
	53: "k_eMaxLastHits",
	54: "k_eMaxDenies",
	55: "k_eRadiantWinRate",
	56: "k_eDireWinRate",
	57: "k_eRadiantGameCount",
	58: "k_eDireGameCount",
	59: "k_eMaxDamage",
	60: "k_eMaxHealing",
	61: "k_eMaxTowerDamage",
	62: "k_eAverageGPM",
	63: "k_eMaxGPM",
	64: "k_eAverageXPM",
	65: "k_eMaxXPM",
}

var CMsgBattleReport_HighlightType_value = map[string]int32{
	"k_eHighlightTypeInvalid":            -1,
	"k_eGameWinrate":                     0,
	"k_eLaneWinrate":                     1,
	"k_eMMRDelta":                        2,
	"k_eNumHeroesPlayed":                 3,
	"k_eNumGamesPlayed":                  4,
	"k_eAveragePowerRunesTaken":          5,
	"k_eAverageBountyRunesTaken":         6,
	"k_eTotalKillEnemyT1First":           7,
	"k_eTotalRoshanKills":                8,
	"k_eTotalDewards":                    9,
	"k_eTotalCampsStacked":               10,
	"k_eMaxWinstreak":                    11,
	"k_eAverageDewards":                  12,
	"k_eAverageKills":                    13,
	"k_eMaxKills":                        14,
	"k_eAverageAssists":                  15,
	"k_eMaxAssists":                      16,
	"k_eAverageDeaths":                   17,
	"k_eMinDeaths":                       18,
	"k_eAverageCampsStacked":             19,
	"k_eTotalLastHits":                   20,
	"k_eAverageLastHits":                 21,
	"k_eTotalDenies":                     22,
	"k_eAverageDenies":                   23,
	"k_eTotalGamesWithRoshanAdvantage":   24,
	"k_ePercentGamesWithRoshanAdvantage": 25,
	"k_eAverageStunDuration":             26,
	"k_eTotalStunDuration":               27,
	"k_eAverageTeleportsUsed":            28,
	"k_eTotalTeleportsUsed":              29,
	"k_eAverageHeroDamage":               30,
	"k_eTotalHeroDamage":                 31,
	"k_eAverageHeroHealing":              32,
	"k_eTotalHeroHealing":                33,
	"k_eAverageTowerDamage":              34,
	"k_eTotalTowerDamage":                35,
	"k_eMaxLossStreak":                   36,
	"k_eAverageGameDuration":             37,
	"k_eMaxGameDuration":                 38,
	"k_eMinGameDuration":                 39,
	"k_eAverageWinDuration":              40,
	"k_eMaxWinDuration":                  41,
	"k_eMinWinDuration":                  42,
	"k_eAverageLossDuration":             43,
	"k_eMaxLossDuration":                 44,
	"k_eMinLossDuration":                 45,
	"k_ePctGamesEnemyT1TakenFirst":       46,
	"k_eMaxCampsStacked":                 47,
	"k_eMaxDewards":                      48,
	"k_eMaxRoshanKills":                  49,
	"k_eMaxBountyRunesTaken":             50,
	"k_eMaxPowerRunesTaken":              51,
	"k_eMaxDeaths":                       52,
	"k_eMaxLastHits":                     53,
	"k_eMaxDenies":                       54,
	"k_eRadiantWinRate":                  55,
	"k_eDireWinRate":                     56,
	"k_eRadiantGameCount":                57,
	"k_eDireGameCount":                   58,
	"k_eMaxDamage":                       59,
	"k_eMaxHealing":                      60,
	"k_eMaxTowerDamage":                  61,
	"k_eAverageGPM":                      62,
	"k_eMaxGPM":                          63,
	"k_eAverageXPM":                      64,
	"k_eMaxXPM":                          65,
}

func (x CMsgBattleReport_HighlightType) Enum() *CMsgBattleReport_HighlightType {
	p := new(CMsgBattleReport_HighlightType)
	*p = x
	return p
}

func (x CMsgBattleReport_HighlightType) String() string {
	return proto.EnumName(CMsgBattleReport_HighlightType_name, int32(x))
}

func (x *CMsgBattleReport_HighlightType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_HighlightType_value, data, "CMsgBattleReport_HighlightType")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_HighlightType(value)
	return nil
}

func (CMsgBattleReport_HighlightType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{0}
}

type CMsgBattleReport_HighlightCategory int32

const (
	CMsgBattleReport_HighlightCategory_k_eHighlightGeneral CMsgBattleReport_HighlightCategory = 0
	CMsgBattleReport_HighlightCategory_k_eHighlightHero    CMsgBattleReport_HighlightCategory = 1
	CMsgBattleReport_HighlightCategory_k_eHighlightRole    CMsgBattleReport_HighlightCategory = 2
)

var CMsgBattleReport_HighlightCategory_name = map[int32]string{
	0: "k_eHighlightGeneral",
	1: "k_eHighlightHero",
	2: "k_eHighlightRole",
}

var CMsgBattleReport_HighlightCategory_value = map[string]int32{
	"k_eHighlightGeneral": 0,
	"k_eHighlightHero":    1,
	"k_eHighlightRole":    2,
}

func (x CMsgBattleReport_HighlightCategory) Enum() *CMsgBattleReport_HighlightCategory {
	p := new(CMsgBattleReport_HighlightCategory)
	*p = x
	return p
}

func (x CMsgBattleReport_HighlightCategory) String() string {
	return proto.EnumName(CMsgBattleReport_HighlightCategory_name, int32(x))
}

func (x *CMsgBattleReport_HighlightCategory) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_HighlightCategory_value, data, "CMsgBattleReport_HighlightCategory")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_HighlightCategory(value)
	return nil
}

func (CMsgBattleReport_HighlightCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{1}
}

type CMsgBattleReport_Role int32

const (
	CMsgBattleReport_Role_k_eUnknownRole CMsgBattleReport_Role = -1
	CMsgBattleReport_Role_k_eSafelane    CMsgBattleReport_Role = 0
	CMsgBattleReport_Role_k_eMidlane     CMsgBattleReport_Role = 1
	CMsgBattleReport_Role_k_eOfflane     CMsgBattleReport_Role = 2
	CMsgBattleReport_Role_k_eSoftSupport CMsgBattleReport_Role = 3
	CMsgBattleReport_Role_k_eHardSupport CMsgBattleReport_Role = 4
)

var CMsgBattleReport_Role_name = map[int32]string{
	-1: "k_eUnknownRole",
	0:  "k_eSafelane",
	1:  "k_eMidlane",
	2:  "k_eOfflane",
	3:  "k_eSoftSupport",
	4:  "k_eHardSupport",
}

var CMsgBattleReport_Role_value = map[string]int32{
	"k_eUnknownRole": -1,
	"k_eSafelane":    0,
	"k_eMidlane":     1,
	"k_eOfflane":     2,
	"k_eSoftSupport": 3,
	"k_eHardSupport": 4,
}

func (x CMsgBattleReport_Role) Enum() *CMsgBattleReport_Role {
	p := new(CMsgBattleReport_Role)
	*p = x
	return p
}

func (x CMsgBattleReport_Role) String() string {
	return proto.EnumName(CMsgBattleReport_Role_name, int32(x))
}

func (x *CMsgBattleReport_Role) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_Role_value, data, "CMsgBattleReport_Role")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_Role(value)
	return nil
}

func (CMsgBattleReport_Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{2}
}

type CMsgBattleReport_CompareContext int32

const (
	CMsgBattleReport_CompareContext_k_eCompareContextInvalid  CMsgBattleReport_CompareContext = -1
	CMsgBattleReport_CompareContext_k_eAbsoluteValue          CMsgBattleReport_CompareContext = 0
	CMsgBattleReport_CompareContext_k_ePlayersOfSimilarRank   CMsgBattleReport_CompareContext = 1
	CMsgBattleReport_CompareContext_k_eAllPlayers             CMsgBattleReport_CompareContext = 2
	CMsgBattleReport_CompareContext_k_ePlayersPersonalHistory CMsgBattleReport_CompareContext = 3
)

var CMsgBattleReport_CompareContext_name = map[int32]string{
	-1: "k_eCompareContextInvalid",
	0:  "k_eAbsoluteValue",
	1:  "k_ePlayersOfSimilarRank",
	2:  "k_eAllPlayers",
	3:  "k_ePlayersPersonalHistory",
}

var CMsgBattleReport_CompareContext_value = map[string]int32{
	"k_eCompareContextInvalid":  -1,
	"k_eAbsoluteValue":          0,
	"k_ePlayersOfSimilarRank":   1,
	"k_eAllPlayers":             2,
	"k_ePlayersPersonalHistory": 3,
}

func (x CMsgBattleReport_CompareContext) Enum() *CMsgBattleReport_CompareContext {
	p := new(CMsgBattleReport_CompareContext)
	*p = x
	return p
}

func (x CMsgBattleReport_CompareContext) String() string {
	return proto.EnumName(CMsgBattleReport_CompareContext_name, int32(x))
}

func (x *CMsgBattleReport_CompareContext) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_CompareContext_value, data, "CMsgBattleReport_CompareContext")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_CompareContext(value)
	return nil
}

func (CMsgBattleReport_CompareContext) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{3}
}

type CMsgBattleReport_HighlightTier int32

const (
	CMsgBattleReport_HighlightTier_k_eHighlightTierLow    CMsgBattleReport_HighlightTier = -1
	CMsgBattleReport_HighlightTier_k_eHighlightTierNone   CMsgBattleReport_HighlightTier = 0
	CMsgBattleReport_HighlightTier_k_eHighlightTier1      CMsgBattleReport_HighlightTier = 1
	CMsgBattleReport_HighlightTier_k_eHighlightTier2      CMsgBattleReport_HighlightTier = 2
	CMsgBattleReport_HighlightTier_k_eHighlightTier3      CMsgBattleReport_HighlightTier = 3
	CMsgBattleReport_HighlightTier_k_eHighlightTierCustom CMsgBattleReport_HighlightTier = 4
)

var CMsgBattleReport_HighlightTier_name = map[int32]string{
	-1: "k_eHighlightTierLow",
	0:  "k_eHighlightTierNone",
	1:  "k_eHighlightTier1",
	2:  "k_eHighlightTier2",
	3:  "k_eHighlightTier3",
	4:  "k_eHighlightTierCustom",
}

var CMsgBattleReport_HighlightTier_value = map[string]int32{
	"k_eHighlightTierLow":    -1,
	"k_eHighlightTierNone":   0,
	"k_eHighlightTier1":      1,
	"k_eHighlightTier2":      2,
	"k_eHighlightTier3":      3,
	"k_eHighlightTierCustom": 4,
}

func (x CMsgBattleReport_HighlightTier) Enum() *CMsgBattleReport_HighlightTier {
	p := new(CMsgBattleReport_HighlightTier)
	*p = x
	return p
}

func (x CMsgBattleReport_HighlightTier) String() string {
	return proto.EnumName(CMsgBattleReport_HighlightTier_name, int32(x))
}

func (x *CMsgBattleReport_HighlightTier) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_HighlightTier_value, data, "CMsgBattleReport_HighlightTier")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_HighlightTier(value)
	return nil
}

func (CMsgBattleReport_HighlightTier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{4}
}

type CMsgBattleReport_HighlightRarity int32

const (
	CMsgBattleReport_HighlightRarity_k_eHighlightCommon   CMsgBattleReport_HighlightRarity = 0
	CMsgBattleReport_HighlightRarity_k_eHighlightUncommon CMsgBattleReport_HighlightRarity = 1
	CMsgBattleReport_HighlightRarity_k_eHighlightRare     CMsgBattleReport_HighlightRarity = 2
)

var CMsgBattleReport_HighlightRarity_name = map[int32]string{
	0: "k_eHighlightCommon",
	1: "k_eHighlightUncommon",
	2: "k_eHighlightRare",
}

var CMsgBattleReport_HighlightRarity_value = map[string]int32{
	"k_eHighlightCommon":   0,
	"k_eHighlightUncommon": 1,
	"k_eHighlightRare":     2,
}

func (x CMsgBattleReport_HighlightRarity) Enum() *CMsgBattleReport_HighlightRarity {
	p := new(CMsgBattleReport_HighlightRarity)
	*p = x
	return p
}

func (x CMsgBattleReport_HighlightRarity) String() string {
	return proto.EnumName(CMsgBattleReport_HighlightRarity_name, int32(x))
}

func (x *CMsgBattleReport_HighlightRarity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_HighlightRarity_value, data, "CMsgBattleReport_HighlightRarity")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_HighlightRarity(value)
	return nil
}

func (CMsgBattleReport_HighlightRarity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{5}
}

type CMsgBattleReport_EOutcome int32

const (
	CMsgBattleReport_EOutcome_k_eWin  CMsgBattleReport_EOutcome = 0
	CMsgBattleReport_EOutcome_k_eLoss CMsgBattleReport_EOutcome = 1
)

var CMsgBattleReport_EOutcome_name = map[int32]string{
	0: "k_eWin",
	1: "k_eLoss",
}

var CMsgBattleReport_EOutcome_value = map[string]int32{
	"k_eWin":  0,
	"k_eLoss": 1,
}

func (x CMsgBattleReport_EOutcome) Enum() *CMsgBattleReport_EOutcome {
	p := new(CMsgBattleReport_EOutcome)
	*p = x
	return p
}

func (x CMsgBattleReport_EOutcome) String() string {
	return proto.EnumName(CMsgBattleReport_EOutcome_name, int32(x))
}

func (x *CMsgBattleReport_EOutcome) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_EOutcome_value, data, "CMsgBattleReport_EOutcome")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_EOutcome(value)
	return nil
}

func (CMsgBattleReport_EOutcome) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{6}
}

type CMsgBattleReport_ELaneOutcome int32

const (
	CMsgBattleReport_ELaneOutcome_k_eUnknownLaneOutcome CMsgBattleReport_ELaneOutcome = -1
	CMsgBattleReport_ELaneOutcome_k_eWonLane            CMsgBattleReport_ELaneOutcome = 0
	CMsgBattleReport_ELaneOutcome_k_eLostLane           CMsgBattleReport_ELaneOutcome = 1
	CMsgBattleReport_ELaneOutcome_k_eEvenLane           CMsgBattleReport_ELaneOutcome = 2
)

var CMsgBattleReport_ELaneOutcome_name = map[int32]string{
	-1: "k_eUnknownLaneOutcome",
	0:  "k_eWonLane",
	1:  "k_eLostLane",
	2:  "k_eEvenLane",
}

var CMsgBattleReport_ELaneOutcome_value = map[string]int32{
	"k_eUnknownLaneOutcome": -1,
	"k_eWonLane":            0,
	"k_eLostLane":           1,
	"k_eEvenLane":           2,
}

func (x CMsgBattleReport_ELaneOutcome) Enum() *CMsgBattleReport_ELaneOutcome {
	p := new(CMsgBattleReport_ELaneOutcome)
	*p = x
	return p
}

func (x CMsgBattleReport_ELaneOutcome) String() string {
	return proto.EnumName(CMsgBattleReport_ELaneOutcome_name, int32(x))
}

func (x *CMsgBattleReport_ELaneOutcome) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgBattleReport_ELaneOutcome_value, data, "CMsgBattleReport_ELaneOutcome")
	if err != nil {
		return err
	}
	*x = CMsgBattleReport_ELaneOutcome(value)
	return nil
}

func (CMsgBattleReport_ELaneOutcome) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{7}
}

type CMsgClientToGCGetBattleReportResponse_EResponse int32

const (
	CMsgClientToGCGetBattleReportResponse_k_eInternalError            CMsgClientToGCGetBattleReportResponse_EResponse = 0
	CMsgClientToGCGetBattleReportResponse_k_eSuccess                  CMsgClientToGCGetBattleReportResponse_EResponse = 1
	CMsgClientToGCGetBattleReportResponse_k_eTooBusy                  CMsgClientToGCGetBattleReportResponse_EResponse = 2
	CMsgClientToGCGetBattleReportResponse_k_eDisabled                 CMsgClientToGCGetBattleReportResponse_EResponse = 3
	CMsgClientToGCGetBattleReportResponse_k_ePermissionDenied         CMsgClientToGCGetBattleReportResponse_EResponse = 4
	CMsgClientToGCGetBattleReportResponse_k_eNotSubscribedToDotaPlus  CMsgClientToGCGetBattleReportResponse_EResponse = 5
	CMsgClientToGCGetBattleReportResponse_k_eInvalidParameters        CMsgClientToGCGetBattleReportResponse_EResponse = 6
	CMsgClientToGCGetBattleReportResponse_k_eUnableToGetPlusSubInfo   CMsgClientToGCGetBattleReportResponse_EResponse = 7
	CMsgClientToGCGetBattleReportResponse_k_eUnableToLoadBattleReport CMsgClientToGCGetBattleReportResponse_EResponse = 8
	CMsgClientToGCGetBattleReportResponse_k_eUnableToSaveBattleReport CMsgClientToGCGetBattleReportResponse_EResponse = 9
	CMsgClientToGCGetBattleReportResponse_k_eUnableToGetAggregates    CMsgClientToGCGetBattleReportResponse_EResponse = 10
	CMsgClientToGCGetBattleReportResponse_k_eNotEnoughGamesPlayed     CMsgClientToGCGetBattleReportResponse_EResponse = 11
)

var CMsgClientToGCGetBattleReportResponse_EResponse_name = map[int32]string{
	0:  "k_eInternalError",
	1:  "k_eSuccess",
	2:  "k_eTooBusy",
	3:  "k_eDisabled",
	4:  "k_ePermissionDenied",
	5:  "k_eNotSubscribedToDotaPlus",
	6:  "k_eInvalidParameters",
	7:  "k_eUnableToGetPlusSubInfo",
	8:  "k_eUnableToLoadBattleReport",
	9:  "k_eUnableToSaveBattleReport",
	10: "k_eUnableToGetAggregates",
	11: "k_eNotEnoughGamesPlayed",
}

var CMsgClientToGCGetBattleReportResponse_EResponse_value = map[string]int32{
	"k_eInternalError":            0,
	"k_eSuccess":                  1,
	"k_eTooBusy":                  2,
	"k_eDisabled":                 3,
	"k_ePermissionDenied":         4,
	"k_eNotSubscribedToDotaPlus":  5,
	"k_eInvalidParameters":        6,
	"k_eUnableToGetPlusSubInfo":   7,
	"k_eUnableToLoadBattleReport": 8,
	"k_eUnableToSaveBattleReport": 9,
	"k_eUnableToGetAggregates":    10,
	"k_eNotEnoughGamesPlayed":     11,
}

func (x CMsgClientToGCGetBattleReportResponse_EResponse) Enum() *CMsgClientToGCGetBattleReportResponse_EResponse {
	p := new(CMsgClientToGCGetBattleReportResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetBattleReportResponse_EResponse) String() string {
	return proto.EnumName(CMsgClientToGCGetBattleReportResponse_EResponse_name, int32(x))
}

func (x *CMsgClientToGCGetBattleReportResponse_EResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgClientToGCGetBattleReportResponse_EResponse_value, data, "CMsgClientToGCGetBattleReportResponse_EResponse")
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetBattleReportResponse_EResponse(value)
	return nil
}

func (CMsgClientToGCGetBattleReportResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{9, 0}
}

type CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse int32

const (
	CMsgClientToGCGetBattleReportAggregateStatsResponse_k_eInternalError           CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = 0
	CMsgClientToGCGetBattleReportAggregateStatsResponse_k_eSuccess                 CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = 1
	CMsgClientToGCGetBattleReportAggregateStatsResponse_k_eTooBusy                 CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = 2
	CMsgClientToGCGetBattleReportAggregateStatsResponse_k_eDisabled                CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = 3
	CMsgClientToGCGetBattleReportAggregateStatsResponse_k_ePermissionDenied        CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = 4
	CMsgClientToGCGetBattleReportAggregateStatsResponse_k_eInvalidParams           CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = 5
	CMsgClientToGCGetBattleReportAggregateStatsResponse_k_eNotSubscribedToDotaPlus CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = 6
)

var CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse_name = map[int32]string{
	0: "k_eInternalError",
	1: "k_eSuccess",
	2: "k_eTooBusy",
	3: "k_eDisabled",
	4: "k_ePermissionDenied",
	5: "k_eInvalidParams",
	6: "k_eNotSubscribedToDotaPlus",
}

var CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse_value = map[string]int32{
	"k_eInternalError":           0,
	"k_eSuccess":                 1,
	"k_eTooBusy":                 2,
	"k_eDisabled":                3,
	"k_ePermissionDenied":        4,
	"k_eInvalidParams":           5,
	"k_eNotSubscribedToDotaPlus": 6,
}

func (x CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse) Enum() *CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse {
	p := new(CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse) String() string {
	return proto.EnumName(CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse_name, int32(x))
}

func (x *CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse_value, data, "CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse")
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse(value)
	return nil
}

func (CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{11, 0}
}

type CMsgClientToGCGetBattleReportInfoResponse_EResponse int32

const (
	CMsgClientToGCGetBattleReportInfoResponse_k_eInternalError           CMsgClientToGCGetBattleReportInfoResponse_EResponse = 0
	CMsgClientToGCGetBattleReportInfoResponse_k_eSuccess                 CMsgClientToGCGetBattleReportInfoResponse_EResponse = 1
	CMsgClientToGCGetBattleReportInfoResponse_k_eTooBusy                 CMsgClientToGCGetBattleReportInfoResponse_EResponse = 2
	CMsgClientToGCGetBattleReportInfoResponse_k_eDisabled                CMsgClientToGCGetBattleReportInfoResponse_EResponse = 3
	CMsgClientToGCGetBattleReportInfoResponse_k_ePermissionDenied        CMsgClientToGCGetBattleReportInfoResponse_EResponse = 4
	CMsgClientToGCGetBattleReportInfoResponse_k_eNotSubscribedToDotaPlus CMsgClientToGCGetBattleReportInfoResponse_EResponse = 5
)

var CMsgClientToGCGetBattleReportInfoResponse_EResponse_name = map[int32]string{
	0: "k_eInternalError",
	1: "k_eSuccess",
	2: "k_eTooBusy",
	3: "k_eDisabled",
	4: "k_ePermissionDenied",
	5: "k_eNotSubscribedToDotaPlus",
}

var CMsgClientToGCGetBattleReportInfoResponse_EResponse_value = map[string]int32{
	"k_eInternalError":           0,
	"k_eSuccess":                 1,
	"k_eTooBusy":                 2,
	"k_eDisabled":                3,
	"k_ePermissionDenied":        4,
	"k_eNotSubscribedToDotaPlus": 5,
}

func (x CMsgClientToGCGetBattleReportInfoResponse_EResponse) Enum() *CMsgClientToGCGetBattleReportInfoResponse_EResponse {
	p := new(CMsgClientToGCGetBattleReportInfoResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetBattleReportInfoResponse_EResponse) String() string {
	return proto.EnumName(CMsgClientToGCGetBattleReportInfoResponse_EResponse_name, int32(x))
}

func (x *CMsgClientToGCGetBattleReportInfoResponse_EResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgClientToGCGetBattleReportInfoResponse_EResponse_value, data, "CMsgClientToGCGetBattleReportInfoResponse_EResponse")
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetBattleReportInfoResponse_EResponse(value)
	return nil
}

func (CMsgClientToGCGetBattleReportInfoResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{13, 0}
}

type CMsgClientToGCAcknowledgeBattleReportResponse_EResponse int32

const (
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eInternalError            CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 0
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eSuccess                  CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 1
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eTooBusy                  CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 2
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eDisabled                 CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 3
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eTimeout                  CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 4
	CMsgClientToGCAcknowledgeBattleReportResponse_k_ePermissionDenied         CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 5
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eUnableToLoadBattleReport CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 6
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eAlreadyAcknowledged      CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 7
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eUnknownReport            CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 8
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eNotSubscribedToDotaPlus  CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 9
	CMsgClientToGCAcknowledgeBattleReportResponse_k_eNotEnoughGamesPlayed     CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = 10
)

var CMsgClientToGCAcknowledgeBattleReportResponse_EResponse_name = map[int32]string{
	0:  "k_eInternalError",
	1:  "k_eSuccess",
	2:  "k_eTooBusy",
	3:  "k_eDisabled",
	4:  "k_eTimeout",
	5:  "k_ePermissionDenied",
	6:  "k_eUnableToLoadBattleReport",
	7:  "k_eAlreadyAcknowledged",
	8:  "k_eUnknownReport",
	9:  "k_eNotSubscribedToDotaPlus",
	10: "k_eNotEnoughGamesPlayed",
}

var CMsgClientToGCAcknowledgeBattleReportResponse_EResponse_value = map[string]int32{
	"k_eInternalError":            0,
	"k_eSuccess":                  1,
	"k_eTooBusy":                  2,
	"k_eDisabled":                 3,
	"k_eTimeout":                  4,
	"k_ePermissionDenied":         5,
	"k_eUnableToLoadBattleReport": 6,
	"k_eAlreadyAcknowledged":      7,
	"k_eUnknownReport":            8,
	"k_eNotSubscribedToDotaPlus":  9,
	"k_eNotEnoughGamesPlayed":     10,
}

func (x CMsgClientToGCAcknowledgeBattleReportResponse_EResponse) Enum() *CMsgClientToGCAcknowledgeBattleReportResponse_EResponse {
	p := new(CMsgClientToGCAcknowledgeBattleReportResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCAcknowledgeBattleReportResponse_EResponse) String() string {
	return proto.EnumName(CMsgClientToGCAcknowledgeBattleReportResponse_EResponse_name, int32(x))
}

func (x *CMsgClientToGCAcknowledgeBattleReportResponse_EResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgClientToGCAcknowledgeBattleReportResponse_EResponse_value, data, "CMsgClientToGCAcknowledgeBattleReportResponse_EResponse")
	if err != nil {
		return err
	}
	*x = CMsgClientToGCAcknowledgeBattleReportResponse_EResponse(value)
	return nil
}

func (CMsgClientToGCAcknowledgeBattleReportResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{15, 0}
}

type CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse int32

const (
	CMsgClientToGCGetBattleReportMatchHistoryResponse_k_eInternalError           CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = 0
	CMsgClientToGCGetBattleReportMatchHistoryResponse_k_eSuccess                 CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = 1
	CMsgClientToGCGetBattleReportMatchHistoryResponse_k_eTooBusy                 CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = 2
	CMsgClientToGCGetBattleReportMatchHistoryResponse_k_eDisabled                CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = 3
	CMsgClientToGCGetBattleReportMatchHistoryResponse_k_eTimeout                 CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = 4
	CMsgClientToGCGetBattleReportMatchHistoryResponse_k_ePermissionDenied        CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = 5
	CMsgClientToGCGetBattleReportMatchHistoryResponse_k_eNotSubscribedToDotaPlus CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = 6
)

var CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse_name = map[int32]string{
	0: "k_eInternalError",
	1: "k_eSuccess",
	2: "k_eTooBusy",
	3: "k_eDisabled",
	4: "k_eTimeout",
	5: "k_ePermissionDenied",
	6: "k_eNotSubscribedToDotaPlus",
}

var CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse_value = map[string]int32{
	"k_eInternalError":           0,
	"k_eSuccess":                 1,
	"k_eTooBusy":                 2,
	"k_eDisabled":                3,
	"k_eTimeout":                 4,
	"k_ePermissionDenied":        5,
	"k_eNotSubscribedToDotaPlus": 6,
}

func (x CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse) Enum() *CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse {
	p := new(CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse) String() string {
	return proto.EnumName(CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse_name, int32(x))
}

func (x *CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse_value, data, "CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse")
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse(value)
	return nil
}

func (CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{17, 0}
}

type CMsgClientToGCGetBattleReport struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration             *uint32  `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCGetBattleReport) Reset()         { *m = CMsgClientToGCGetBattleReport{} }
func (m *CMsgClientToGCGetBattleReport) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCGetBattleReport) ProtoMessage()    {}
func (*CMsgClientToGCGetBattleReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{0}
}

func (m *CMsgClientToGCGetBattleReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReport.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReport.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReport.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReport) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReport.Size(m)
}
func (m *CMsgClientToGCGetBattleReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReport.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReport proto.InternalMessageInfo

func (m *CMsgClientToGCGetBattleReport) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgClientToGCGetBattleReport) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgClientToGCGetBattleReport) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CMsgBattleReport_Game struct {
	HeroId                       *uint32                        `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Kills                        *uint32                        `protobuf:"varint,2,opt,name=kills" json:"kills,omitempty"`
	Deaths                       *uint32                        `protobuf:"varint,3,opt,name=deaths" json:"deaths,omitempty"`
	Assists                      *uint32                        `protobuf:"varint,4,opt,name=assists" json:"assists,omitempty"`
	RankChange                   *int32                         `protobuf:"varint,5,opt,name=rank_change,json=rankChange" json:"rank_change,omitempty"`
	LastHits                     *uint32                        `protobuf:"varint,6,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies                       *uint32                        `protobuf:"varint,21,opt,name=denies" json:"denies,omitempty"`
	Gpm                          *uint32                        `protobuf:"varint,7,opt,name=gpm" json:"gpm,omitempty"`
	Xpm                          *uint32                        `protobuf:"varint,8,opt,name=xpm" json:"xpm,omitempty"`
	Role                         *CMsgBattleReport_Role         `protobuf:"varint,9,opt,name=role,enum=protocol.CMsgBattleReport_Role,def=-1" json:"role,omitempty"`
	Outcome                      *CMsgBattleReport_EOutcome     `protobuf:"varint,10,opt,name=outcome,enum=protocol.CMsgBattleReport_EOutcome,def=0" json:"outcome,omitempty"`
	LaneOutcome                  *CMsgBattleReport_ELaneOutcome `protobuf:"varint,11,opt,name=lane_outcome,json=laneOutcome,enum=protocol.CMsgBattleReport_ELaneOutcome,def=-1" json:"lane_outcome,omitempty"`
	Ranked                       *bool                          `protobuf:"varint,12,opt,name=ranked" json:"ranked,omitempty"`
	MatchId                      *uint64                        `protobuf:"varint,13,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	LaneSelectionFlags           *uint32                        `protobuf:"varint,14,opt,name=lane_selection_flags,json=laneSelectionFlags" json:"lane_selection_flags,omitempty"`
	PredictedPosition            *uint32                        `protobuf:"varint,15,opt,name=predicted_position,json=predictedPosition" json:"predicted_position,omitempty"`
	SecondsDead                  *uint32                        `protobuf:"varint,16,opt,name=seconds_dead,json=secondsDead" json:"seconds_dead,omitempty"`
	WinningTeam                  *uint32                        `protobuf:"varint,17,opt,name=winning_team,json=winningTeam" json:"winning_team,omitempty"`
	PlayerSlot                   *uint32                        `protobuf:"varint,28,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	PartyGame                    *bool                          `protobuf:"varint,19,opt,name=party_game,json=partyGame" json:"party_game,omitempty"`
	StartTime                    *uint32                        `protobuf:"varint,20,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	BountyRunes                  *uint32                        `protobuf:"varint,22,opt,name=bounty_runes,json=bountyRunes" json:"bounty_runes,omitempty"`
	WaterRunes                   *uint32                        `protobuf:"varint,23,opt,name=water_runes,json=waterRunes" json:"water_runes,omitempty"`
	PowerRunes                   *uint32                        `protobuf:"varint,24,opt,name=power_runes,json=powerRunes" json:"power_runes,omitempty"`
	TimeEnemyT1TowerDestroyed    *uint32                        `protobuf:"varint,25,opt,name=time_enemy_t1_tower_destroyed,json=timeEnemyT1TowerDestroyed" json:"time_enemy_t1_tower_destroyed,omitempty"`
	TimeFriendlyT1TowerDestroyed *uint32                        `protobuf:"varint,26,opt,name=time_friendly_t1_tower_destroyed,json=timeFriendlyT1TowerDestroyed" json:"time_friendly_t1_tower_destroyed,omitempty"`
	EnemyRoshanKills             *uint32                        `protobuf:"varint,27,opt,name=enemy_roshan_kills,json=enemyRoshanKills" json:"enemy_roshan_kills,omitempty"`
	TeleportsUsed                *uint32                        `protobuf:"varint,29,opt,name=teleports_used,json=teleportsUsed" json:"teleports_used,omitempty"`
	Dewards                      *uint32                        `protobuf:"varint,30,opt,name=dewards" json:"dewards,omitempty"`
	CampsStacked                 *uint32                        `protobuf:"varint,31,opt,name=camps_stacked,json=campsStacked" json:"camps_stacked,omitempty"`
	SupportGold                  *uint32                        `protobuf:"varint,32,opt,name=support_gold,json=supportGold" json:"support_gold,omitempty"`
	HeroDamage                   *uint32                        `protobuf:"varint,33,opt,name=hero_damage,json=heroDamage" json:"hero_damage,omitempty"`
	HeroHealing                  *uint32                        `protobuf:"varint,34,opt,name=hero_healing,json=heroHealing" json:"hero_healing,omitempty"`
	TowerDamage                  *uint32                        `protobuf:"varint,35,opt,name=tower_damage,json=towerDamage" json:"tower_damage,omitempty"`
	SuccessfulSmokes             *uint32                        `protobuf:"varint,36,opt,name=successful_smokes,json=successfulSmokes" json:"successful_smokes,omitempty"`
	StunDuration                 *uint32                        `protobuf:"varint,37,opt,name=stun_duration,json=stunDuration" json:"stun_duration,omitempty"`
	Duration                     *uint32                        `protobuf:"varint,38,opt,name=duration" json:"duration,omitempty"`
	FriendlyRoshanKills          *uint32                        `protobuf:"varint,39,opt,name=friendly_roshan_kills,json=friendlyRoshanKills" json:"friendly_roshan_kills,omitempty"`
	PreviousRank                 *int32                         `protobuf:"varint,40,opt,name=previous_rank,json=previousRank" json:"previous_rank,omitempty"`
	GameMode                     *uint32                        `protobuf:"varint,41,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	LobbyType                    *uint32                        `protobuf:"varint,42,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	TimePurchasedShard           *float32                       `protobuf:"fixed32,43,opt,name=time_purchased_shard,json=timePurchasedShard" json:"time_purchased_shard,omitempty"`
	TimePurchasedScepter         *float32                       `protobuf:"fixed32,44,opt,name=time_purchased_scepter,json=timePurchasedScepter" json:"time_purchased_scepter,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                       `json:"-"`
	XXX_unrecognized             []byte                         `json:"-"`
	XXX_sizecache                int32                          `json:"-"`
}

func (m *CMsgBattleReport_Game) Reset()         { *m = CMsgBattleReport_Game{} }
func (m *CMsgBattleReport_Game) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReport_Game) ProtoMessage()    {}
func (*CMsgBattleReport_Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{1}
}

func (m *CMsgBattleReport_Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReport_Game.Unmarshal(m, b)
}
func (m *CMsgBattleReport_Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReport_Game.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReport_Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReport_Game.Merge(m, src)
}
func (m *CMsgBattleReport_Game) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReport_Game.Size(m)
}
func (m *CMsgBattleReport_Game) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReport_Game.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReport_Game proto.InternalMessageInfo

const Default_CMsgBattleReport_Game_Role CMsgBattleReport_Role = CMsgBattleReport_Role_k_eUnknownRole
const Default_CMsgBattleReport_Game_Outcome CMsgBattleReport_EOutcome = CMsgBattleReport_EOutcome_k_eWin
const Default_CMsgBattleReport_Game_LaneOutcome CMsgBattleReport_ELaneOutcome = CMsgBattleReport_ELaneOutcome_k_eUnknownLaneOutcome

func (m *CMsgBattleReport_Game) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetRankChange() int32 {
	if m != nil && m.RankChange != nil {
		return *m.RankChange
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetLastHits() uint32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetDenies() uint32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetGpm() uint32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetXpm() uint32 {
	if m != nil && m.Xpm != nil {
		return *m.Xpm
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetRole() CMsgBattleReport_Role {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return Default_CMsgBattleReport_Game_Role
}

func (m *CMsgBattleReport_Game) GetOutcome() CMsgBattleReport_EOutcome {
	if m != nil && m.Outcome != nil {
		return *m.Outcome
	}
	return Default_CMsgBattleReport_Game_Outcome
}

func (m *CMsgBattleReport_Game) GetLaneOutcome() CMsgBattleReport_ELaneOutcome {
	if m != nil && m.LaneOutcome != nil {
		return *m.LaneOutcome
	}
	return Default_CMsgBattleReport_Game_LaneOutcome
}

func (m *CMsgBattleReport_Game) GetRanked() bool {
	if m != nil && m.Ranked != nil {
		return *m.Ranked
	}
	return false
}

func (m *CMsgBattleReport_Game) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetLaneSelectionFlags() uint32 {
	if m != nil && m.LaneSelectionFlags != nil {
		return *m.LaneSelectionFlags
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetPredictedPosition() uint32 {
	if m != nil && m.PredictedPosition != nil {
		return *m.PredictedPosition
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetSecondsDead() uint32 {
	if m != nil && m.SecondsDead != nil {
		return *m.SecondsDead
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetWinningTeam() uint32 {
	if m != nil && m.WinningTeam != nil {
		return *m.WinningTeam
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetPartyGame() bool {
	if m != nil && m.PartyGame != nil {
		return *m.PartyGame
	}
	return false
}

func (m *CMsgBattleReport_Game) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetBountyRunes() uint32 {
	if m != nil && m.BountyRunes != nil {
		return *m.BountyRunes
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetWaterRunes() uint32 {
	if m != nil && m.WaterRunes != nil {
		return *m.WaterRunes
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetPowerRunes() uint32 {
	if m != nil && m.PowerRunes != nil {
		return *m.PowerRunes
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetTimeEnemyT1TowerDestroyed() uint32 {
	if m != nil && m.TimeEnemyT1TowerDestroyed != nil {
		return *m.TimeEnemyT1TowerDestroyed
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetTimeFriendlyT1TowerDestroyed() uint32 {
	if m != nil && m.TimeFriendlyT1TowerDestroyed != nil {
		return *m.TimeFriendlyT1TowerDestroyed
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetEnemyRoshanKills() uint32 {
	if m != nil && m.EnemyRoshanKills != nil {
		return *m.EnemyRoshanKills
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetTeleportsUsed() uint32 {
	if m != nil && m.TeleportsUsed != nil {
		return *m.TeleportsUsed
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetDewards() uint32 {
	if m != nil && m.Dewards != nil {
		return *m.Dewards
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetCampsStacked() uint32 {
	if m != nil && m.CampsStacked != nil {
		return *m.CampsStacked
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetSupportGold() uint32 {
	if m != nil && m.SupportGold != nil {
		return *m.SupportGold
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetHeroDamage() uint32 {
	if m != nil && m.HeroDamage != nil {
		return *m.HeroDamage
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetHeroHealing() uint32 {
	if m != nil && m.HeroHealing != nil {
		return *m.HeroHealing
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetTowerDamage() uint32 {
	if m != nil && m.TowerDamage != nil {
		return *m.TowerDamage
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetSuccessfulSmokes() uint32 {
	if m != nil && m.SuccessfulSmokes != nil {
		return *m.SuccessfulSmokes
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetStunDuration() uint32 {
	if m != nil && m.StunDuration != nil {
		return *m.StunDuration
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetFriendlyRoshanKills() uint32 {
	if m != nil && m.FriendlyRoshanKills != nil {
		return *m.FriendlyRoshanKills
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetPreviousRank() int32 {
	if m != nil && m.PreviousRank != nil {
		return *m.PreviousRank
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetTimePurchasedShard() float32 {
	if m != nil && m.TimePurchasedShard != nil {
		return *m.TimePurchasedShard
	}
	return 0
}

func (m *CMsgBattleReport_Game) GetTimePurchasedScepter() float32 {
	if m != nil && m.TimePurchasedScepter != nil {
		return *m.TimePurchasedScepter
	}
	return 0
}

type CMsgBattleReport_GameList struct {
	Game                 []*CMsgBattleReport_Game `protobuf:"bytes,1,rep,name=game" json:"game,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CMsgBattleReport_GameList) Reset()         { *m = CMsgBattleReport_GameList{} }
func (m *CMsgBattleReport_GameList) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReport_GameList) ProtoMessage()    {}
func (*CMsgBattleReport_GameList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{2}
}

func (m *CMsgBattleReport_GameList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReport_GameList.Unmarshal(m, b)
}
func (m *CMsgBattleReport_GameList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReport_GameList.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReport_GameList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReport_GameList.Merge(m, src)
}
func (m *CMsgBattleReport_GameList) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReport_GameList.Size(m)
}
func (m *CMsgBattleReport_GameList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReport_GameList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReport_GameList proto.InternalMessageInfo

func (m *CMsgBattleReport_GameList) GetGame() []*CMsgBattleReport_Game {
	if m != nil {
		return m.Game
	}
	return nil
}

type CMsgBattleReport struct {
	Games                []*CMsgBattleReport_Game    `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
	Highlights           *CMsgBattleReportHighlights `protobuf:"bytes,3,opt,name=highlights" json:"highlights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgBattleReport) Reset()         { *m = CMsgBattleReport{} }
func (m *CMsgBattleReport) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReport) ProtoMessage()    {}
func (*CMsgBattleReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{3}
}

func (m *CMsgBattleReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReport.Unmarshal(m, b)
}
func (m *CMsgBattleReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReport.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReport.Merge(m, src)
}
func (m *CMsgBattleReport) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReport.Size(m)
}
func (m *CMsgBattleReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReport.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReport proto.InternalMessageInfo

func (m *CMsgBattleReport) GetGames() []*CMsgBattleReport_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

func (m *CMsgBattleReport) GetHighlights() *CMsgBattleReportHighlights {
	if m != nil {
		return m.Highlights
	}
	return nil
}

type CMsgBattleReport_HighlightGeneral struct {
	WinLossWindow        *int32   `protobuf:"varint,1,opt,name=win_loss_window,json=winLossWindow" json:"win_loss_window,omitempty"`
	WinPercent           *float32 `protobuf:"fixed32,2,opt,name=win_percent,json=winPercent" json:"win_percent,omitempty"`
	MmrDelta             *int32   `protobuf:"varint,3,opt,name=mmr_delta,json=mmrDelta" json:"mmr_delta,omitempty"`
	HighlightScore       *float32 `protobuf:"fixed32,4,opt,name=highlight_score,json=highlightScore" json:"highlight_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBattleReport_HighlightGeneral) Reset()         { *m = CMsgBattleReport_HighlightGeneral{} }
func (m *CMsgBattleReport_HighlightGeneral) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReport_HighlightGeneral) ProtoMessage()    {}
func (*CMsgBattleReport_HighlightGeneral) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{3, 0}
}

func (m *CMsgBattleReport_HighlightGeneral) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReport_HighlightGeneral.Unmarshal(m, b)
}
func (m *CMsgBattleReport_HighlightGeneral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReport_HighlightGeneral.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReport_HighlightGeneral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReport_HighlightGeneral.Merge(m, src)
}
func (m *CMsgBattleReport_HighlightGeneral) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReport_HighlightGeneral.Size(m)
}
func (m *CMsgBattleReport_HighlightGeneral) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReport_HighlightGeneral.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReport_HighlightGeneral proto.InternalMessageInfo

func (m *CMsgBattleReport_HighlightGeneral) GetWinLossWindow() int32 {
	if m != nil && m.WinLossWindow != nil {
		return *m.WinLossWindow
	}
	return 0
}

func (m *CMsgBattleReport_HighlightGeneral) GetWinPercent() float32 {
	if m != nil && m.WinPercent != nil {
		return *m.WinPercent
	}
	return 0
}

func (m *CMsgBattleReport_HighlightGeneral) GetMmrDelta() int32 {
	if m != nil && m.MmrDelta != nil {
		return *m.MmrDelta
	}
	return 0
}

func (m *CMsgBattleReport_HighlightGeneral) GetHighlightScore() float32 {
	if m != nil && m.HighlightScore != nil {
		return *m.HighlightScore
	}
	return 0
}

type CMsgBattleReport_Highlight struct {
	HighlightId          *uint32                             `protobuf:"varint,1,req,name=highlight_id,json=highlightId" json:"highlight_id,omitempty"`
	Category             *CMsgBattleReport_HighlightCategory `protobuf:"varint,2,req,name=category,enum=protocol.CMsgBattleReport_HighlightCategory,def=0" json:"category,omitempty"`
	Tier                 *CMsgBattleReport_HighlightTier     `protobuf:"varint,3,opt,name=tier,enum=protocol.CMsgBattleReport_HighlightTier,def=-1" json:"tier,omitempty"`
	Rarity               *CMsgBattleReport_HighlightRarity   `protobuf:"varint,4,opt,name=rarity,enum=protocol.CMsgBattleReport_HighlightRarity,def=0" json:"rarity,omitempty"`
	Score                *float32                            `protobuf:"fixed32,5,opt,name=score" json:"score,omitempty"`
	Confidence           *float32                            `protobuf:"fixed32,6,opt,name=confidence" json:"confidence,omitempty"`
	HeroId               *uint32                             `protobuf:"varint,7,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Role                 *CMsgBattleReport_Role              `protobuf:"varint,8,opt,name=role,enum=protocol.CMsgBattleReport_Role,def=-1" json:"role,omitempty"`
	ComparisonDeltaValue *float32                            `protobuf:"fixed32,9,opt,name=comparison_delta_value,json=comparisonDeltaValue" json:"comparison_delta_value,omitempty"`
	Context              *CMsgBattleReport_CompareContext    `protobuf:"varint,10,opt,name=context,enum=protocol.CMsgBattleReport_CompareContext,def=-1" json:"context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgBattleReport_Highlight) Reset()         { *m = CMsgBattleReport_Highlight{} }
func (m *CMsgBattleReport_Highlight) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReport_Highlight) ProtoMessage()    {}
func (*CMsgBattleReport_Highlight) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{3, 1}
}

func (m *CMsgBattleReport_Highlight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReport_Highlight.Unmarshal(m, b)
}
func (m *CMsgBattleReport_Highlight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReport_Highlight.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReport_Highlight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReport_Highlight.Merge(m, src)
}
func (m *CMsgBattleReport_Highlight) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReport_Highlight.Size(m)
}
func (m *CMsgBattleReport_Highlight) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReport_Highlight.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReport_Highlight proto.InternalMessageInfo

const Default_CMsgBattleReport_Highlight_Category CMsgBattleReport_HighlightCategory = CMsgBattleReport_HighlightCategory_k_eHighlightGeneral
const Default_CMsgBattleReport_Highlight_Tier CMsgBattleReport_HighlightTier = CMsgBattleReport_HighlightTier_k_eHighlightTierLow
const Default_CMsgBattleReport_Highlight_Rarity CMsgBattleReport_HighlightRarity = CMsgBattleReport_HighlightRarity_k_eHighlightCommon
const Default_CMsgBattleReport_Highlight_Role CMsgBattleReport_Role = CMsgBattleReport_Role_k_eUnknownRole
const Default_CMsgBattleReport_Highlight_Context CMsgBattleReport_CompareContext = CMsgBattleReport_CompareContext_k_eCompareContextInvalid

func (m *CMsgBattleReport_Highlight) GetHighlightId() uint32 {
	if m != nil && m.HighlightId != nil {
		return *m.HighlightId
	}
	return 0
}

func (m *CMsgBattleReport_Highlight) GetCategory() CMsgBattleReport_HighlightCategory {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return Default_CMsgBattleReport_Highlight_Category
}

func (m *CMsgBattleReport_Highlight) GetTier() CMsgBattleReport_HighlightTier {
	if m != nil && m.Tier != nil {
		return *m.Tier
	}
	return Default_CMsgBattleReport_Highlight_Tier
}

func (m *CMsgBattleReport_Highlight) GetRarity() CMsgBattleReport_HighlightRarity {
	if m != nil && m.Rarity != nil {
		return *m.Rarity
	}
	return Default_CMsgBattleReport_Highlight_Rarity
}

func (m *CMsgBattleReport_Highlight) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgBattleReport_Highlight) GetConfidence() float32 {
	if m != nil && m.Confidence != nil {
		return *m.Confidence
	}
	return 0
}

func (m *CMsgBattleReport_Highlight) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgBattleReport_Highlight) GetRole() CMsgBattleReport_Role {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return Default_CMsgBattleReport_Highlight_Role
}

func (m *CMsgBattleReport_Highlight) GetComparisonDeltaValue() float32 {
	if m != nil && m.ComparisonDeltaValue != nil {
		return *m.ComparisonDeltaValue
	}
	return 0
}

func (m *CMsgBattleReport_Highlight) GetContext() CMsgBattleReport_CompareContext {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return Default_CMsgBattleReport_Highlight_Context
}

type CMsgBattleReportInfo struct {
	Timestamp            *uint32  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration             *uint32  `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	Acknowledged         *bool    `protobuf:"varint,3,opt,name=acknowledged" json:"acknowledged,omitempty"`
	FeaturedHeroId       *uint32  `protobuf:"varint,4,opt,name=featured_hero_id,json=featuredHeroId" json:"featured_hero_id,omitempty"`
	FeaturedPosition     *uint32  `protobuf:"varint,5,opt,name=featured_position,json=featuredPosition" json:"featured_position,omitempty"`
	GamesPlayed          *uint32  `protobuf:"varint,6,opt,name=games_played,json=gamesPlayed" json:"games_played,omitempty"`
	MedalCounts          []uint32 `protobuf:"varint,7,rep,name=medal_counts,json=medalCounts" json:"medal_counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBattleReportInfo) Reset()         { *m = CMsgBattleReportInfo{} }
func (m *CMsgBattleReportInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReportInfo) ProtoMessage()    {}
func (*CMsgBattleReportInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{4}
}

func (m *CMsgBattleReportInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReportInfo.Unmarshal(m, b)
}
func (m *CMsgBattleReportInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReportInfo.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReportInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReportInfo.Merge(m, src)
}
func (m *CMsgBattleReportInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReportInfo.Size(m)
}
func (m *CMsgBattleReportInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReportInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReportInfo proto.InternalMessageInfo

func (m *CMsgBattleReportInfo) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgBattleReportInfo) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgBattleReportInfo) GetAcknowledged() bool {
	if m != nil && m.Acknowledged != nil {
		return *m.Acknowledged
	}
	return false
}

func (m *CMsgBattleReportInfo) GetFeaturedHeroId() uint32 {
	if m != nil && m.FeaturedHeroId != nil {
		return *m.FeaturedHeroId
	}
	return 0
}

func (m *CMsgBattleReportInfo) GetFeaturedPosition() uint32 {
	if m != nil && m.FeaturedPosition != nil {
		return *m.FeaturedPosition
	}
	return 0
}

func (m *CMsgBattleReportInfo) GetGamesPlayed() uint32 {
	if m != nil && m.GamesPlayed != nil {
		return *m.GamesPlayed
	}
	return 0
}

func (m *CMsgBattleReportInfo) GetMedalCounts() []uint32 {
	if m != nil {
		return m.MedalCounts
	}
	return nil
}

type CMsgBattleReportInfoList struct {
	BattleReportInfo     []*CMsgBattleReportInfo `protobuf:"bytes,1,rep,name=battle_report_info,json=battleReportInfo" json:"battle_report_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgBattleReportInfoList) Reset()         { *m = CMsgBattleReportInfoList{} }
func (m *CMsgBattleReportInfoList) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReportInfoList) ProtoMessage()    {}
func (*CMsgBattleReportInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{5}
}

func (m *CMsgBattleReportInfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReportInfoList.Unmarshal(m, b)
}
func (m *CMsgBattleReportInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReportInfoList.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReportInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReportInfoList.Merge(m, src)
}
func (m *CMsgBattleReportInfoList) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReportInfoList.Size(m)
}
func (m *CMsgBattleReportInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReportInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReportInfoList proto.InternalMessageInfo

func (m *CMsgBattleReportInfoList) GetBattleReportInfo() []*CMsgBattleReportInfo {
	if m != nil {
		return m.BattleReportInfo
	}
	return nil
}

type CMsgBattleReportHighlights struct {
	Highlights           []*CMsgBattleReport_Highlight `protobuf:"bytes,1,rep,name=highlights" json:"highlights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CMsgBattleReportHighlights) Reset()         { *m = CMsgBattleReportHighlights{} }
func (m *CMsgBattleReportHighlights) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReportHighlights) ProtoMessage()    {}
func (*CMsgBattleReportHighlights) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{6}
}

func (m *CMsgBattleReportHighlights) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReportHighlights.Unmarshal(m, b)
}
func (m *CMsgBattleReportHighlights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReportHighlights.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReportHighlights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReportHighlights.Merge(m, src)
}
func (m *CMsgBattleReportHighlights) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReportHighlights.Size(m)
}
func (m *CMsgBattleReportHighlights) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReportHighlights.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReportHighlights proto.InternalMessageInfo

func (m *CMsgBattleReportHighlights) GetHighlights() []*CMsgBattleReport_Highlight {
	if m != nil {
		return m.Highlights
	}
	return nil
}

type CMsgBattleReportAggregateStats struct {
	Result               []*CMsgBattleReportAggregateStats_CMsgBattleReportAggregate `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *CMsgBattleReportAggregateStats) Reset()         { *m = CMsgBattleReportAggregateStats{} }
func (m *CMsgBattleReportAggregateStats) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReportAggregateStats) ProtoMessage()    {}
func (*CMsgBattleReportAggregateStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{7}
}

func (m *CMsgBattleReportAggregateStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReportAggregateStats.Unmarshal(m, b)
}
func (m *CMsgBattleReportAggregateStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReportAggregateStats.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReportAggregateStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReportAggregateStats.Merge(m, src)
}
func (m *CMsgBattleReportAggregateStats) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReportAggregateStats.Size(m)
}
func (m *CMsgBattleReportAggregateStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReportAggregateStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReportAggregateStats proto.InternalMessageInfo

func (m *CMsgBattleReportAggregateStats) GetResult() []*CMsgBattleReportAggregateStats_CMsgBattleReportAggregate {
	if m != nil {
		return m.Result
	}
	return nil
}

type CMsgBattleReportAggregateStats_CMsgBattleReportStat struct {
	Mean                 *float32 `protobuf:"fixed32,1,opt,name=mean" json:"mean,omitempty"`
	Stdev                *float32 `protobuf:"fixed32,2,opt,name=stdev" json:"stdev,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) Reset() {
	*m = CMsgBattleReportAggregateStats_CMsgBattleReportStat{}
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgBattleReportAggregateStats_CMsgBattleReportStat) ProtoMessage() {}
func (*CMsgBattleReportAggregateStats_CMsgBattleReportStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{7, 0}
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportStat.Unmarshal(m, b)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportStat.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportStat.Merge(m, src)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportStat.Size(m)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportStat.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportStat proto.InternalMessageInfo

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) GetMean() float32 {
	if m != nil && m.Mean != nil {
		return *m.Mean
	}
	return 0
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportStat) GetStdev() float32 {
	if m != nil && m.Stdev != nil {
		return *m.Stdev
	}
	return 0
}

type CMsgBattleReportAggregateStats_CMsgBattleReportAggregate struct {
	HeroId                       *uint32                                              `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	PredictedPosition            *uint32                                              `protobuf:"varint,2,opt,name=predicted_position,json=predictedPosition" json:"predicted_position,omitempty"`
	GameCount                    *uint32                                              `protobuf:"varint,3,opt,name=game_count,json=gameCount" json:"game_count,omitempty"`
	WinCount                     *uint32                                              `protobuf:"varint,4,opt,name=win_count,json=winCount" json:"win_count,omitempty"`
	LaneWinCount                 *uint32                                              `protobuf:"varint,5,opt,name=lane_win_count,json=laneWinCount" json:"lane_win_count,omitempty"`
	Kills                        *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,6,opt,name=kills" json:"kills,omitempty"`
	Deaths                       *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,7,opt,name=deaths" json:"deaths,omitempty"`
	Assists                      *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,8,opt,name=assists" json:"assists,omitempty"`
	RankChange                   *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,9,opt,name=rank_change,json=rankChange" json:"rank_change,omitempty"`
	LastHits                     *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,10,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies                       *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,11,opt,name=denies" json:"denies,omitempty"`
	Gpm                          *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,12,opt,name=gpm" json:"gpm,omitempty"`
	Xpm                          *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,13,opt,name=xpm" json:"xpm,omitempty"`
	SecondsDead                  *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,14,opt,name=seconds_dead,json=secondsDead" json:"seconds_dead,omitempty"`
	BountyRunes                  *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,15,opt,name=bounty_runes,json=bountyRunes" json:"bounty_runes,omitempty"`
	WaterRunes                   *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,16,opt,name=water_runes,json=waterRunes" json:"water_runes,omitempty"`
	PowerRunes                   *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,17,opt,name=power_runes,json=powerRunes" json:"power_runes,omitempty"`
	TimeEnemyT1TowerDestroyed    *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,18,opt,name=time_enemy_t1_tower_destroyed,json=timeEnemyT1TowerDestroyed" json:"time_enemy_t1_tower_destroyed,omitempty"`
	TimeFriendlyT1TowerDestroyed *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,19,opt,name=time_friendly_t1_tower_destroyed,json=timeFriendlyT1TowerDestroyed" json:"time_friendly_t1_tower_destroyed,omitempty"`
	EnemyRoshanKills             *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,20,opt,name=enemy_roshan_kills,json=enemyRoshanKills" json:"enemy_roshan_kills,omitempty"`
	TeleportsUsed                *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,21,opt,name=teleports_used,json=teleportsUsed" json:"teleports_used,omitempty"`
	Dewards                      *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,22,opt,name=dewards" json:"dewards,omitempty"`
	CampsStacked                 *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,23,opt,name=camps_stacked,json=campsStacked" json:"camps_stacked,omitempty"`
	SupportGold                  *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,24,opt,name=support_gold,json=supportGold" json:"support_gold,omitempty"`
	HeroDamage                   *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,25,opt,name=hero_damage,json=heroDamage" json:"hero_damage,omitempty"`
	HeroHealing                  *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,26,opt,name=hero_healing,json=heroHealing" json:"hero_healing,omitempty"`
	TowerDamage                  *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,27,opt,name=tower_damage,json=towerDamage" json:"tower_damage,omitempty"`
	SuccessfulSmokes             *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,28,opt,name=successful_smokes,json=successfulSmokes" json:"successful_smokes,omitempty"`
	StunDuration                 *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,29,opt,name=stun_duration,json=stunDuration" json:"stun_duration,omitempty"`
	Duration                     *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,30,opt,name=duration" json:"duration,omitempty"`
	FriendlyRoshanKills          *CMsgBattleReportAggregateStats_CMsgBattleReportStat `protobuf:"bytes,31,opt,name=friendly_roshan_kills,json=friendlyRoshanKills" json:"friendly_roshan_kills,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                                             `json:"-"`
	XXX_unrecognized             []byte                                               `json:"-"`
	XXX_sizecache                int32                                                `json:"-"`
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) Reset() {
	*m = CMsgBattleReportAggregateStats_CMsgBattleReportAggregate{}
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) ProtoMessage() {}
func (*CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{7, 1}
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportAggregate.Unmarshal(m, b)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportAggregate.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportAggregate.Merge(m, src)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportAggregate.Size(m)
}
func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportAggregate.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReportAggregateStats_CMsgBattleReportAggregate proto.InternalMessageInfo

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetPredictedPosition() uint32 {
	if m != nil && m.PredictedPosition != nil {
		return *m.PredictedPosition
	}
	return 0
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetGameCount() uint32 {
	if m != nil && m.GameCount != nil {
		return *m.GameCount
	}
	return 0
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetWinCount() uint32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetLaneWinCount() uint32 {
	if m != nil && m.LaneWinCount != nil {
		return *m.LaneWinCount
	}
	return 0
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetKills() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Kills
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetDeaths() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Deaths
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetAssists() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Assists
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetRankChange() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.RankChange
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetLastHits() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.LastHits
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetDenies() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Denies
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetGpm() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Gpm
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetXpm() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Xpm
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetSecondsDead() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.SecondsDead
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetBountyRunes() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.BountyRunes
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetWaterRunes() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.WaterRunes
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetPowerRunes() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.PowerRunes
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetTimeEnemyT1TowerDestroyed() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.TimeEnemyT1TowerDestroyed
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetTimeFriendlyT1TowerDestroyed() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.TimeFriendlyT1TowerDestroyed
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetEnemyRoshanKills() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.EnemyRoshanKills
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetTeleportsUsed() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.TeleportsUsed
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetDewards() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Dewards
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetCampsStacked() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.CampsStacked
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetSupportGold() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.SupportGold
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetHeroDamage() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.HeroDamage
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetHeroHealing() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.HeroHealing
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetTowerDamage() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.TowerDamage
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetSuccessfulSmokes() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.SuccessfulSmokes
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetStunDuration() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.StunDuration
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetDuration() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *CMsgBattleReportAggregateStats_CMsgBattleReportAggregate) GetFriendlyRoshanKills() *CMsgBattleReportAggregateStats_CMsgBattleReportStat {
	if m != nil {
		return m.FriendlyRoshanKills
	}
	return nil
}

type CMsgBattleReportAggregatedGeneralStats struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBattleReportAggregatedGeneralStats) Reset() {
	*m = CMsgBattleReportAggregatedGeneralStats{}
}
func (m *CMsgBattleReportAggregatedGeneralStats) String() string { return proto.CompactTextString(m) }
func (*CMsgBattleReportAggregatedGeneralStats) ProtoMessage()    {}
func (*CMsgBattleReportAggregatedGeneralStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{8}
}

func (m *CMsgBattleReportAggregatedGeneralStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBattleReportAggregatedGeneralStats.Unmarshal(m, b)
}
func (m *CMsgBattleReportAggregatedGeneralStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBattleReportAggregatedGeneralStats.Marshal(b, m, deterministic)
}
func (m *CMsgBattleReportAggregatedGeneralStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBattleReportAggregatedGeneralStats.Merge(m, src)
}
func (m *CMsgBattleReportAggregatedGeneralStats) XXX_Size() int {
	return xxx_messageInfo_CMsgBattleReportAggregatedGeneralStats.Size(m)
}
func (m *CMsgBattleReportAggregatedGeneralStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBattleReportAggregatedGeneralStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBattleReportAggregatedGeneralStats proto.InternalMessageInfo

type CMsgClientToGCGetBattleReportResponse struct {
	Report               *CMsgBattleReport                                `protobuf:"bytes,1,opt,name=report" json:"report,omitempty"`
	Response             *CMsgClientToGCGetBattleReportResponse_EResponse `protobuf:"varint,2,opt,name=response,enum=protocol.CMsgClientToGCGetBattleReportResponse_EResponse,def=0" json:"response,omitempty"`
	AggregateStats       *CMsgBattleReportAggregateStats                  `protobuf:"bytes,3,opt,name=aggregate_stats,json=aggregateStats" json:"aggregate_stats,omitempty"`
	Info                 *CMsgBattleReportInfo                            `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportResponse) Reset()         { *m = CMsgClientToGCGetBattleReportResponse{} }
func (m *CMsgClientToGCGetBattleReportResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCGetBattleReportResponse) ProtoMessage()    {}
func (*CMsgClientToGCGetBattleReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{9}
}

func (m *CMsgClientToGCGetBattleReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportResponse.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportResponse.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportResponse.Size(m)
}
func (m *CMsgClientToGCGetBattleReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportResponse proto.InternalMessageInfo

const Default_CMsgClientToGCGetBattleReportResponse_Response CMsgClientToGCGetBattleReportResponse_EResponse = CMsgClientToGCGetBattleReportResponse_k_eInternalError

func (m *CMsgClientToGCGetBattleReportResponse) GetReport() *CMsgBattleReport {
	if m != nil {
		return m.Report
	}
	return nil
}

func (m *CMsgClientToGCGetBattleReportResponse) GetResponse() CMsgClientToGCGetBattleReportResponse_EResponse {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCGetBattleReportResponse_Response
}

func (m *CMsgClientToGCGetBattleReportResponse) GetAggregateStats() *CMsgBattleReportAggregateStats {
	if m != nil {
		return m.AggregateStats
	}
	return nil
}

func (m *CMsgClientToGCGetBattleReportResponse) GetInfo() *CMsgBattleReportInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CMsgClientToGCGetBattleReportAggregateStats struct {
	AggregateKeys        []*CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey `protobuf:"bytes,1,rep,name=aggregate_keys,json=aggregateKeys" json:"aggregate_keys,omitempty"`
	Timestamp            *uint32                                                                     `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration             *uint32                                                                     `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	Rank                 *uint32                                                                     `protobuf:"varint,4,opt,name=rank" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                      `json:"-"`
	XXX_sizecache        int32                                                                       `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportAggregateStats) Reset() {
	*m = CMsgClientToGCGetBattleReportAggregateStats{}
}
func (m *CMsgClientToGCGetBattleReportAggregateStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientToGCGetBattleReportAggregateStats) ProtoMessage() {}
func (*CMsgClientToGCGetBattleReportAggregateStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{10}
}

func (m *CMsgClientToGCGetBattleReportAggregateStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats.Size(m)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats proto.InternalMessageInfo

func (m *CMsgClientToGCGetBattleReportAggregateStats) GetAggregateKeys() []*CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey {
	if m != nil {
		return m.AggregateKeys
	}
	return nil
}

func (m *CMsgClientToGCGetBattleReportAggregateStats) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgClientToGCGetBattleReportAggregateStats) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgClientToGCGetBattleReportAggregateStats) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

type CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey struct {
	HeroId               *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	PredictedPosition    *uint32  `protobuf:"varint,2,opt,name=predicted_position,json=predictedPosition" json:"predicted_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) Reset() {
	*m = CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey{}
}
func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) ProtoMessage() {}
func (*CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{10, 0}
}

func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey.Size(m)
}
func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey proto.InternalMessageInfo

func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey) GetPredictedPosition() uint32 {
	if m != nil && m.PredictedPosition != nil {
		return *m.PredictedPosition
	}
	return 0
}

type CMsgClientToGCGetBattleReportAggregateStatsResponse struct {
	AggregateStats       *CMsgBattleReportAggregateStats                                `protobuf:"bytes,1,opt,name=aggregate_stats,json=aggregateStats" json:"aggregate_stats,omitempty"`
	Response             *CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse `protobuf:"varint,2,opt,name=response,enum=protocol.CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse,def=0" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) Reset() {
	*m = CMsgClientToGCGetBattleReportAggregateStatsResponse{}
}
func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientToGCGetBattleReportAggregateStatsResponse) ProtoMessage() {}
func (*CMsgClientToGCGetBattleReportAggregateStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{11}
}

func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStatsResponse.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStatsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStatsResponse.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStatsResponse.Size(m)
}
func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportAggregateStatsResponse proto.InternalMessageInfo

const Default_CMsgClientToGCGetBattleReportAggregateStatsResponse_Response CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse = CMsgClientToGCGetBattleReportAggregateStatsResponse_k_eInternalError

func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) GetAggregateStats() *CMsgBattleReportAggregateStats {
	if m != nil {
		return m.AggregateStats
	}
	return nil
}

func (m *CMsgClientToGCGetBattleReportAggregateStatsResponse) GetResponse() CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCGetBattleReportAggregateStatsResponse_Response
}

type CMsgClientToGCGetBattleReportInfo struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportInfo) Reset()         { *m = CMsgClientToGCGetBattleReportInfo{} }
func (m *CMsgClientToGCGetBattleReportInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCGetBattleReportInfo) ProtoMessage()    {}
func (*CMsgClientToGCGetBattleReportInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{12}
}

func (m *CMsgClientToGCGetBattleReportInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportInfo.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportInfo.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportInfo.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportInfo.Size(m)
}
func (m *CMsgClientToGCGetBattleReportInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportInfo proto.InternalMessageInfo

func (m *CMsgClientToGCGetBattleReportInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgClientToGCGetBattleReportInfoResponse struct {
	BattleReportInfoList *CMsgBattleReportInfoList                            `protobuf:"bytes,1,opt,name=battle_report_info_list,json=battleReportInfoList" json:"battle_report_info_list,omitempty"`
	Response             *CMsgClientToGCGetBattleReportInfoResponse_EResponse `protobuf:"varint,2,opt,name=response,enum=protocol.CMsgClientToGCGetBattleReportInfoResponse_EResponse,def=0" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportInfoResponse) Reset() {
	*m = CMsgClientToGCGetBattleReportInfoResponse{}
}
func (m *CMsgClientToGCGetBattleReportInfoResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientToGCGetBattleReportInfoResponse) ProtoMessage() {}
func (*CMsgClientToGCGetBattleReportInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{13}
}

func (m *CMsgClientToGCGetBattleReportInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportInfoResponse.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportInfoResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportInfoResponse.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportInfoResponse.Size(m)
}
func (m *CMsgClientToGCGetBattleReportInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportInfoResponse proto.InternalMessageInfo

const Default_CMsgClientToGCGetBattleReportInfoResponse_Response CMsgClientToGCGetBattleReportInfoResponse_EResponse = CMsgClientToGCGetBattleReportInfoResponse_k_eInternalError

func (m *CMsgClientToGCGetBattleReportInfoResponse) GetBattleReportInfoList() *CMsgBattleReportInfoList {
	if m != nil {
		return m.BattleReportInfoList
	}
	return nil
}

func (m *CMsgClientToGCGetBattleReportInfoResponse) GetResponse() CMsgClientToGCGetBattleReportInfoResponse_EResponse {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCGetBattleReportInfoResponse_Response
}

type CMsgClientToGCAcknowledgeBattleReport struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration             *uint32  `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCAcknowledgeBattleReport) Reset()         { *m = CMsgClientToGCAcknowledgeBattleReport{} }
func (m *CMsgClientToGCAcknowledgeBattleReport) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCAcknowledgeBattleReport) ProtoMessage()    {}
func (*CMsgClientToGCAcknowledgeBattleReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{14}
}

func (m *CMsgClientToGCAcknowledgeBattleReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReport.Unmarshal(m, b)
}
func (m *CMsgClientToGCAcknowledgeBattleReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReport.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCAcknowledgeBattleReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReport.Merge(m, src)
}
func (m *CMsgClientToGCAcknowledgeBattleReport) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReport.Size(m)
}
func (m *CMsgClientToGCAcknowledgeBattleReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReport.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReport proto.InternalMessageInfo

func (m *CMsgClientToGCAcknowledgeBattleReport) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgClientToGCAcknowledgeBattleReport) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgClientToGCAcknowledgeBattleReport) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CMsgClientToGCAcknowledgeBattleReportResponse struct {
	Response             *CMsgClientToGCAcknowledgeBattleReportResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCAcknowledgeBattleReportResponse_EResponse,def=0" json:"response,omitempty"`
	ShardsAwarded        *uint32                                                  `protobuf:"varint,2,opt,name=shards_awarded,json=shardsAwarded" json:"shards_awarded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *CMsgClientToGCAcknowledgeBattleReportResponse) Reset() {
	*m = CMsgClientToGCAcknowledgeBattleReportResponse{}
}
func (m *CMsgClientToGCAcknowledgeBattleReportResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientToGCAcknowledgeBattleReportResponse) ProtoMessage() {}
func (*CMsgClientToGCAcknowledgeBattleReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{15}
}

func (m *CMsgClientToGCAcknowledgeBattleReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReportResponse.Unmarshal(m, b)
}
func (m *CMsgClientToGCAcknowledgeBattleReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReportResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCAcknowledgeBattleReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReportResponse.Merge(m, src)
}
func (m *CMsgClientToGCAcknowledgeBattleReportResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReportResponse.Size(m)
}
func (m *CMsgClientToGCAcknowledgeBattleReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCAcknowledgeBattleReportResponse proto.InternalMessageInfo

const Default_CMsgClientToGCAcknowledgeBattleReportResponse_Response CMsgClientToGCAcknowledgeBattleReportResponse_EResponse = CMsgClientToGCAcknowledgeBattleReportResponse_k_eInternalError

func (m *CMsgClientToGCAcknowledgeBattleReportResponse) GetResponse() CMsgClientToGCAcknowledgeBattleReportResponse_EResponse {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCAcknowledgeBattleReportResponse_Response
}

func (m *CMsgClientToGCAcknowledgeBattleReportResponse) GetShardsAwarded() uint32 {
	if m != nil && m.ShardsAwarded != nil {
		return *m.ShardsAwarded
	}
	return 0
}

type CMsgClientToGCGetBattleReportMatchHistory struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration             *uint32  `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportMatchHistory) Reset() {
	*m = CMsgClientToGCGetBattleReportMatchHistory{}
}
func (m *CMsgClientToGCGetBattleReportMatchHistory) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientToGCGetBattleReportMatchHistory) ProtoMessage() {}
func (*CMsgClientToGCGetBattleReportMatchHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{16}
}

func (m *CMsgClientToGCGetBattleReportMatchHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistory.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportMatchHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistory.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportMatchHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistory.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportMatchHistory) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistory.Size(m)
}
func (m *CMsgClientToGCGetBattleReportMatchHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistory proto.InternalMessageInfo

func (m *CMsgClientToGCGetBattleReportMatchHistory) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgClientToGCGetBattleReportMatchHistory) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgClientToGCGetBattleReportMatchHistory) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CMsgClientToGCGetBattleReportMatchHistoryResponse struct {
	Response             *CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=protocol.CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse,def=0" json:"response,omitempty"`
	Games                *CMsgBattleReport_GameList                                   `protobuf:"bytes,2,opt,name=games" json:"games,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) Reset() {
	*m = CMsgClientToGCGetBattleReportMatchHistoryResponse{}
}
func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientToGCGetBattleReportMatchHistoryResponse) ProtoMessage() {}
func (*CMsgClientToGCGetBattleReportMatchHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b28a743a9e497915, []int{17}
}

func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistoryResponse.Unmarshal(m, b)
}
func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistoryResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistoryResponse.Merge(m, src)
}
func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistoryResponse.Size(m)
}
func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCGetBattleReportMatchHistoryResponse proto.InternalMessageInfo

const Default_CMsgClientToGCGetBattleReportMatchHistoryResponse_Response CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse = CMsgClientToGCGetBattleReportMatchHistoryResponse_k_eInternalError

func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) GetResponse() CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCGetBattleReportMatchHistoryResponse_Response
}

func (m *CMsgClientToGCGetBattleReportMatchHistoryResponse) GetGames() *CMsgBattleReport_GameList {
	if m != nil {
		return m.Games
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.CMsgBattleReport_HighlightType", CMsgBattleReport_HighlightType_name, CMsgBattleReport_HighlightType_value)
	proto.RegisterEnum("protocol.CMsgBattleReport_HighlightCategory", CMsgBattleReport_HighlightCategory_name, CMsgBattleReport_HighlightCategory_value)
	proto.RegisterEnum("protocol.CMsgBattleReport_Role", CMsgBattleReport_Role_name, CMsgBattleReport_Role_value)
	proto.RegisterEnum("protocol.CMsgBattleReport_CompareContext", CMsgBattleReport_CompareContext_name, CMsgBattleReport_CompareContext_value)
	proto.RegisterEnum("protocol.CMsgBattleReport_HighlightTier", CMsgBattleReport_HighlightTier_name, CMsgBattleReport_HighlightTier_value)
	proto.RegisterEnum("protocol.CMsgBattleReport_HighlightRarity", CMsgBattleReport_HighlightRarity_name, CMsgBattleReport_HighlightRarity_value)
	proto.RegisterEnum("protocol.CMsgBattleReport_EOutcome", CMsgBattleReport_EOutcome_name, CMsgBattleReport_EOutcome_value)
	proto.RegisterEnum("protocol.CMsgBattleReport_ELaneOutcome", CMsgBattleReport_ELaneOutcome_name, CMsgBattleReport_ELaneOutcome_value)
	proto.RegisterEnum("protocol.CMsgClientToGCGetBattleReportResponse_EResponse", CMsgClientToGCGetBattleReportResponse_EResponse_name, CMsgClientToGCGetBattleReportResponse_EResponse_value)
	proto.RegisterEnum("protocol.CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse", CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse_name, CMsgClientToGCGetBattleReportAggregateStatsResponse_EResponse_value)
	proto.RegisterEnum("protocol.CMsgClientToGCGetBattleReportInfoResponse_EResponse", CMsgClientToGCGetBattleReportInfoResponse_EResponse_name, CMsgClientToGCGetBattleReportInfoResponse_EResponse_value)
	proto.RegisterEnum("protocol.CMsgClientToGCAcknowledgeBattleReportResponse_EResponse", CMsgClientToGCAcknowledgeBattleReportResponse_EResponse_name, CMsgClientToGCAcknowledgeBattleReportResponse_EResponse_value)
	proto.RegisterEnum("protocol.CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse", CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse_name, CMsgClientToGCGetBattleReportMatchHistoryResponse_EResponse_value)
	proto.RegisterType((*CMsgClientToGCGetBattleReport)(nil), "protocol.CMsgClientToGCGetBattleReport")
	proto.RegisterType((*CMsgBattleReport_Game)(nil), "protocol.CMsgBattleReport_Game")
	proto.RegisterType((*CMsgBattleReport_GameList)(nil), "protocol.CMsgBattleReport_GameList")
	proto.RegisterType((*CMsgBattleReport)(nil), "protocol.CMsgBattleReport")
	proto.RegisterType((*CMsgBattleReport_HighlightGeneral)(nil), "protocol.CMsgBattleReport.HighlightGeneral")
	proto.RegisterType((*CMsgBattleReport_Highlight)(nil), "protocol.CMsgBattleReport.Highlight")
	proto.RegisterType((*CMsgBattleReportInfo)(nil), "protocol.CMsgBattleReportInfo")
	proto.RegisterType((*CMsgBattleReportInfoList)(nil), "protocol.CMsgBattleReportInfoList")
	proto.RegisterType((*CMsgBattleReportHighlights)(nil), "protocol.CMsgBattleReportHighlights")
	proto.RegisterType((*CMsgBattleReportAggregateStats)(nil), "protocol.CMsgBattleReportAggregateStats")
	proto.RegisterType((*CMsgBattleReportAggregateStats_CMsgBattleReportStat)(nil), "protocol.CMsgBattleReportAggregateStats.CMsgBattleReportStat")
	proto.RegisterType((*CMsgBattleReportAggregateStats_CMsgBattleReportAggregate)(nil), "protocol.CMsgBattleReportAggregateStats.CMsgBattleReportAggregate")
	proto.RegisterType((*CMsgBattleReportAggregatedGeneralStats)(nil), "protocol.CMsgBattleReportAggregatedGeneralStats")
	proto.RegisterType((*CMsgClientToGCGetBattleReportResponse)(nil), "protocol.CMsgClientToGCGetBattleReportResponse")
	proto.RegisterType((*CMsgClientToGCGetBattleReportAggregateStats)(nil), "protocol.CMsgClientToGCGetBattleReportAggregateStats")
	proto.RegisterType((*CMsgClientToGCGetBattleReportAggregateStats_CMsgBattleReportAggregateKey)(nil), "protocol.CMsgClientToGCGetBattleReportAggregateStats.CMsgBattleReportAggregateKey")
	proto.RegisterType((*CMsgClientToGCGetBattleReportAggregateStatsResponse)(nil), "protocol.CMsgClientToGCGetBattleReportAggregateStatsResponse")
	proto.RegisterType((*CMsgClientToGCGetBattleReportInfo)(nil), "protocol.CMsgClientToGCGetBattleReportInfo")
	proto.RegisterType((*CMsgClientToGCGetBattleReportInfoResponse)(nil), "protocol.CMsgClientToGCGetBattleReportInfoResponse")
	proto.RegisterType((*CMsgClientToGCAcknowledgeBattleReport)(nil), "protocol.CMsgClientToGCAcknowledgeBattleReport")
	proto.RegisterType((*CMsgClientToGCAcknowledgeBattleReportResponse)(nil), "protocol.CMsgClientToGCAcknowledgeBattleReportResponse")
	proto.RegisterType((*CMsgClientToGCGetBattleReportMatchHistory)(nil), "protocol.CMsgClientToGCGetBattleReportMatchHistory")
	proto.RegisterType((*CMsgClientToGCGetBattleReportMatchHistoryResponse)(nil), "protocol.CMsgClientToGCGetBattleReportMatchHistoryResponse")
}

func init() {
	proto.RegisterFile("dota_gcmessages_client_battle_report.proto", fileDescriptor_b28a743a9e497915)
}

var fileDescriptor_b28a743a9e497915 = []byte{
	// 4171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5b, 0x4b, 0x73, 0x1b, 0x49,
	0x72, 0x16, 0xc0, 0x77, 0x91, 0x04, 0x5b, 0x25, 0x3e, 0x9a, 0x2d, 0x52, 0x6a, 0x41, 0x2f, 0x8a,
	0xd2, 0xc8, 0x23, 0x4a, 0xb3, 0xf6, 0x68, 0x3d, 0xd8, 0xa1, 0x48, 0x89, 0x54, 0x0c, 0x31, 0xc2,
	0x36, 0x28, 0x71, 0x76, 0x23, 0x76, 0x5a, 0x45, 0x74, 0x11, 0x6c, 0xa3, 0x1f, 0x98, 0xae, 0x02,
	0x1f, 0x27, 0xef, 0x44, 0xf8, 0x71, 0x98, 0x83, 0xc3, 0xbe, 0xf8, 0xe0, 0xd3, 0x86, 0xff, 0x88,
	0x8d, 0x5f, 0xe0, 0x8b, 0x6f, 0x0e, 0x47, 0xf8, 0xec, 0x9f, 0xe0, 0x83, 0x1d, 0x95, 0xd5, 0xd5,
	0xe8, 0x06, 0x40, 0x90, 0x3b, 0x8b, 0x5d, 0xaf, 0x2e, 0x62, 0x67, 0x7e, 0x99, 0x55, 0x95, 0x95,
	0x8f, 0xca, 0xea, 0x06, 0x5a, 0x77, 0x42, 0x4e, 0xec, 0x7a, 0xcd, 0xa7, 0x8c, 0x91, 0x3a, 0x65,
	0x76, 0xcd, 0x73, 0x69, 0xc0, 0xed, 0x43, 0xc2, 0xb9, 0x47, 0xed, 0x88, 0x36, 0xc3, 0x88, 0x3f,
	0x6d, 0x46, 0x21, 0x0f, 0xf1, 0x24, 0xfc, 0x57, 0x0b, 0x3d, 0xe3, 0x06, 0xe3, 0x94, 0xf8, 0x4a,
	0x46, 0xb2, 0x8d, 0x25, 0x50, 0xc5, 0x8e, 0x49, 0x44, 0x1d, 0x9b, 0x06, 0x2d, 0x5f, 0x31, 0x56,
	0x7a, 0xc6, 0x08, 0x7d, 0x3f, 0x0c, 0x2e, 0xe2, 0x9e, 0xd2, 0x43, 0xd2, 0x74, 0x63, 0xee, 0x62,
	0xbd, 0xc6, 0x9c, 0x46, 0x8a, 0x1d, 0xd3, 0x17, 0x0e, 0x09, 0xa3, 0x7d, 0xc8, 0xb4, 0x16, 0x06,
	0xbd, 0xe4, 0x95, 0xfe, 0xab, 0x54, 0x42, 0x27, 0xc4, 0x3b, 0xa1, 0xf4, 0x8c, 0xd3, 0x80, 0xb9,
	0x61, 0x10, 0x0b, 0x15, 0xcf, 0xd0, 0xea, 0x56, 0x99, 0xd5, 0xb7, 0x00, 0xba, 0x1f, 0xee, 0x6c,
	0xed, 0x50, 0xfe, 0x0a, 0xcc, 0x62, 0x81, 0x55, 0xf0, 0x2a, 0x42, 0xa4, 0x56, 0x0b, 0x5b, 0x01,
	0xb7, 0x5d, 0x47, 0xcf, 0x99, 0xb9, 0xb5, 0x59, 0x6b, 0x2a, 0xa6, 0xbc, 0x75, 0xf0, 0x0a, 0x9a,
	0xe2, 0xae, 0x4f, 0x19, 0x27, 0x7e, 0x53, 0xcf, 0x4b, 0x6e, 0x42, 0xc0, 0x06, 0x9a, 0x74, 0x5a,
	0x11, 0xe1, 0x6e, 0x18, 0xe8, 0x23, 0xc0, 0x4c, 0x9e, 0x8b, 0xff, 0x30, 0x8b, 0x16, 0xc4, 0xd0,
	0xe9, 0xd1, 0xec, 0x1d, 0xe2, 0x53, 0xbc, 0x84, 0x26, 0x8e, 0x69, 0x14, 0x76, 0xc6, 0x1b, 0x17,
	0x8f, 0x6f, 0x1d, 0x3c, 0x8f, 0xc6, 0x1a, 0xae, 0xe7, 0xb1, 0x78, 0x20, 0xf9, 0x80, 0x17, 0xd1,
	0xb8, 0x43, 0x09, 0x3f, 0x66, 0xf1, 0x10, 0xf1, 0x13, 0xd6, 0xd1, 0x04, 0x61, 0xcc, 0x65, 0x9c,
	0xe9, 0xa3, 0xc0, 0x50, 0x8f, 0xf8, 0x36, 0x9a, 0x8e, 0x48, 0xd0, 0xb0, 0x6b, 0xc7, 0x24, 0xa8,
	0x53, 0x7d, 0xcc, 0xcc, 0xad, 0x8d, 0x59, 0x48, 0x90, 0xb6, 0x80, 0x82, 0x6f, 0xa2, 0x29, 0x8f,
	0x30, 0x6e, 0x1f, 0xbb, 0x9c, 0xe9, 0xe3, 0x72, 0xe2, 0x82, 0xb0, 0xeb, 0xf2, 0x78, 0xbc, 0xc0,
	0xa5, 0x4c, 0x5f, 0x50, 0xe3, 0x89, 0x27, 0xac, 0xa1, 0x91, 0x7a, 0xd3, 0xd7, 0x27, 0x80, 0x28,
	0xfe, 0x14, 0x94, 0xb3, 0xa6, 0xaf, 0x4f, 0x4a, 0xca, 0x59, 0xd3, 0xc7, 0x5b, 0x68, 0x34, 0x0a,
	0x3d, 0xaa, 0x4f, 0x99, 0xb9, 0xb5, 0xc2, 0xc6, 0xed, 0xa7, 0xca, 0xd9, 0x9e, 0xf6, 0x58, 0xc2,
	0x0a, 0x3d, 0xfa, 0xb2, 0xd0, 0xb0, 0xe9, 0xfb, 0xa0, 0x11, 0x84, 0xa7, 0x81, 0x78, 0xb6, 0x40,
	0x18, 0xbf, 0x46, 0x13, 0x61, 0x8b, 0xd7, 0x42, 0x9f, 0xea, 0x08, 0xf4, 0xdc, 0x1d, 0xa0, 0xe7,
	0xf5, 0x3b, 0x09, 0x7d, 0x39, 0xde, 0xb0, 0xe9, 0x81, 0x1b, 0x58, 0x4a, 0x16, 0x13, 0x34, 0xe3,
	0x91, 0x80, 0xda, 0x4a, 0xd7, 0x34, 0xe8, 0x7a, 0x38, 0x48, 0xd7, 0x1e, 0x09, 0xa8, 0xd2, 0xb7,
	0xd0, 0x99, 0x5b, 0x8a, 0x6c, 0x4d, 0x7b, 0x9d, 0x07, 0x61, 0x2a, 0x61, 0x55, 0xea, 0xe8, 0x33,
	0x66, 0x6e, 0x6d, 0xd2, 0x8a, 0x9f, 0xf0, 0x32, 0x9a, 0xf4, 0x09, 0xaf, 0x1d, 0x8b, 0x2d, 0x9e,
	0x35, 0x73, 0x6b, 0xa3, 0xd6, 0x04, 0x3c, 0xbf, 0x75, 0xf0, 0xa7, 0x68, 0x1e, 0x66, 0xc5, 0xa8,
	0x47, 0x6b, 0xc2, 0x51, 0xec, 0x23, 0x8f, 0xd4, 0x99, 0x5e, 0x00, 0x23, 0x62, 0xc1, 0xab, 0x2a,
	0xd6, 0x1b, 0xc1, 0xc1, 0x9f, 0x20, 0xdc, 0x8c, 0xa8, 0xe3, 0xd6, 0x38, 0x75, 0xec, 0x66, 0xc8,
	0x5c, 0x70, 0xb7, 0x39, 0xc0, 0x5f, 0x4f, 0x38, 0x95, 0x98, 0x81, 0xef, 0xa0, 0x19, 0x26, 0x02,
	0xc8, 0x61, 0xb6, 0x43, 0x89, 0xa3, 0x6b, 0x00, 0x9c, 0x8e, 0x69, 0xdb, 0x94, 0x38, 0x02, 0x72,
	0xea, 0x06, 0x81, 0x1b, 0xd4, 0x6d, 0x91, 0x02, 0xf4, 0xeb, 0x12, 0x12, 0xd3, 0xf6, 0x29, 0xf1,
	0x85, 0x0b, 0x35, 0x3d, 0x72, 0x4e, 0x23, 0x9b, 0x79, 0x21, 0xd7, 0x57, 0x00, 0x81, 0x24, 0xa9,
	0xea, 0x85, 0x10, 0x37, 0x4d, 0x12, 0xf1, 0x73, 0xbb, 0x4e, 0x7c, 0xaa, 0xdf, 0x80, 0xe5, 0x4f,
	0x01, 0x05, 0x7c, 0x7c, 0x15, 0x21, 0xc6, 0x49, 0xc4, 0x6d, 0x11, 0x2c, 0xfa, 0xbc, 0x0c, 0x1c,
	0xa0, 0xec, 0xbb, 0x3e, 0x15, 0x33, 0x38, 0x14, 0x11, 0x76, 0x6e, 0x47, 0xad, 0x80, 0x32, 0x7d,
	0x51, 0xce, 0x40, 0xd2, 0x2c, 0x41, 0x12, 0x33, 0x38, 0x25, 0x9c, 0x46, 0x31, 0x62, 0x49, 0xce,
	0x00, 0x48, 0x09, 0xa0, 0x19, 0x9e, 0x26, 0x00, 0x3d, 0x9e, 0xa2, 0x20, 0x49, 0xc0, 0x97, 0x68,
	0x55, 0x8c, 0x6e, 0xd3, 0x80, 0xfa, 0xe7, 0x36, 0x7f, 0x66, 0x73, 0x80, 0x3b, 0x94, 0xf1, 0x28,
	0x3c, 0xa7, 0x8e, 0xbe, 0x0c, 0x22, 0xcb, 0x02, 0xf4, 0x5a, 0x60, 0xf6, 0x9f, 0xed, 0x0b, 0xc4,
	0xb6, 0x02, 0xe0, 0x37, 0xc8, 0x04, 0x0d, 0x47, 0x91, 0x4b, 0x03, 0xc7, 0xeb, 0xab, 0xc4, 0x00,
	0x25, 0x2b, 0x02, 0xf7, 0x26, 0x86, 0xf5, 0xe8, 0x79, 0x82, 0xb0, 0x9c, 0x44, 0x14, 0xb2, 0x63,
	0x12, 0xd8, 0x32, 0xca, 0x6f, 0x82, 0xa4, 0x06, 0x1c, 0x0b, 0x18, 0x5f, 0x41, 0xc0, 0xdf, 0x47,
	0x05, 0x4e, 0x3d, 0x70, 0x49, 0x66, 0xb7, 0x18, 0x75, 0xf4, 0x55, 0x40, 0xce, 0x26, 0xd4, 0xf7,
	0x8c, 0x3a, 0x22, 0xfe, 0x1d, 0x7a, 0x4a, 0x22, 0x87, 0xe9, 0xb7, 0x64, 0xfc, 0xc7, 0x8f, 0xf8,
	0x2e, 0x9a, 0xad, 0x11, 0xbf, 0xc9, 0x6c, 0xc6, 0x49, 0x4d, 0x78, 0xe7, 0x6d, 0xe0, 0xcf, 0x00,
	0xb1, 0x2a, 0x69, 0xe0, 0x27, 0xad, 0x26, 0xf8, 0x7d, 0x3d, 0xf4, 0x1c, 0xdd, 0x8c, 0xfd, 0x44,
	0xd2, 0x76, 0x42, 0xcf, 0x11, 0x16, 0x86, 0x44, 0xe5, 0x10, 0x9f, 0xd4, 0xa9, 0x7e, 0x47, 0x5a,
	0x58, 0x90, 0xb6, 0x81, 0x22, 0x74, 0x00, 0xe0, 0x98, 0x12, 0xcf, 0x0d, 0xea, 0x7a, 0x51, 0xea,
	0x10, 0xb4, 0x5d, 0x49, 0x12, 0x90, 0xd8, 0x62, 0x52, 0xc9, 0x5d, 0x09, 0x01, 0x5a, 0xac, 0xe5,
	0x31, 0xba, 0xce, 0x5a, 0xb5, 0x1a, 0x65, 0xec, 0xa8, 0xe5, 0xd9, 0xcc, 0x0f, 0x1b, 0x94, 0xe9,
	0xf7, 0xa4, 0x71, 0x3a, 0x8c, 0x2a, 0xd0, 0xc5, 0xda, 0x18, 0x6f, 0x05, 0x76, 0x92, 0x77, 0xef,
	0xcb, 0xb5, 0x09, 0xe2, 0x76, 0x4c, 0xcb, 0xe4, 0xe5, 0x07, 0xd9, 0xbc, 0x8c, 0x37, 0xd0, 0x42,
	0xb2, 0x9d, 0x99, 0xed, 0x78, 0x08, 0xc0, 0x1b, 0x8a, 0x99, 0xde, 0x91, 0xbb, 0x68, 0xb6, 0x19,
	0xd1, 0x13, 0x37, 0x6c, 0x31, 0x5b, 0x84, 0xb8, 0xbe, 0x06, 0x29, 0x75, 0x46, 0x11, 0x2d, 0x12,
	0x34, 0x44, 0x52, 0x15, 0xb1, 0x60, 0xfb, 0xa1, 0x43, 0xf5, 0x47, 0x72, 0x54, 0x41, 0x28, 0x87,
	0x0e, 0xc4, 0x83, 0x17, 0x1e, 0x1e, 0x9e, 0xdb, 0xfc, 0xbc, 0x49, 0xf5, 0x75, 0x19, 0x0f, 0x40,
	0xd9, 0x3f, 0x6f, 0x52, 0x91, 0x15, 0xc0, 0xd1, 0x9a, 0xad, 0xa8, 0x76, 0x4c, 0x18, 0x75, 0xa0,
	0x04, 0x3b, 0xfa, 0x63, 0x33, 0xb7, 0x96, 0xb7, 0xb0, 0xe0, 0x55, 0x14, 0xab, 0x2a, 0x38, 0xf8,
	0x05, 0x5a, 0xec, 0x96, 0xa8, 0xd1, 0x26, 0xa7, 0x91, 0xfe, 0x04, 0x64, 0xe6, 0xb3, 0x32, 0x92,
	0x57, 0xac, 0xa0, 0xe5, 0xbe, 0x35, 0x69, 0xcf, 0x65, 0x1c, 0x3f, 0x47, 0xa3, 0x10, 0xcc, 0x39,
	0x73, 0x64, 0x6d, 0x7a, 0x60, 0xf2, 0x16, 0x22, 0x16, 0x80, 0x8b, 0xff, 0x38, 0x81, 0xb4, 0x6e,
	0x3e, 0xfe, 0x0c, 0x8d, 0x09, 0x26, 0xbb, 0xaa, 0x2a, 0x89, 0xc6, 0xdb, 0x08, 0x1d, 0xbb, 0xf5,
	0x63, 0xcf, 0xad, 0x1f, 0x73, 0x59, 0xed, 0xa6, 0x37, 0xee, 0x5d, 0x2c, 0xbb, 0x9b, 0x60, 0xad,
	0x94, 0x9c, 0xf1, 0x9b, 0x1c, 0xd2, 0x12, 0xd6, 0x0e, 0x0d, 0x68, 0x44, 0x3c, 0xfc, 0x00, 0xcd,
	0x9d, 0xba, 0x81, 0xed, 0x85, 0x8c, 0xd9, 0xa7, 0x6e, 0xe0, 0x84, 0xa7, 0x50, 0x7b, 0xc7, 0xac,
	0xd9, 0x53, 0x37, 0xd8, 0x0b, 0x19, 0x3b, 0x00, 0x22, 0x64, 0x1d, 0x37, 0xb0, 0x9b, 0x34, 0xaa,
	0xd1, 0x80, 0x43, 0x21, 0xce, 0x5b, 0xe8, 0xd4, 0x0d, 0x2a, 0x92, 0x22, 0x76, 0xd9, 0xf7, 0x45,
	0xfc, 0x7b, 0x9c, 0xc0, 0x14, 0xc7, 0xac, 0x49, 0xdf, 0x8f, 0xb6, 0xc5, 0x33, 0x7e, 0x88, 0xe6,
	0x92, 0x89, 0xd8, 0xac, 0x16, 0x46, 0x14, 0x4a, 0x73, 0xde, 0x2a, 0x24, 0xe4, 0xaa, 0xa0, 0x1a,
	0xff, 0x35, 0x8a, 0xa6, 0x92, 0x39, 0x42, 0x18, 0x25, 0x62, 0x70, 0x2a, 0xc8, 0x43, 0x18, 0x29,
	0xda, 0x5b, 0x07, 0xff, 0x0a, 0x4d, 0xd6, 0x08, 0xa7, 0xf5, 0x30, 0x3a, 0xd7, 0xf3, 0x66, 0x7e,
	0xad, 0xb0, 0xf1, 0x64, 0x80, 0x51, 0x13, 0xd5, 0x5b, 0xb1, 0xcc, 0xcb, 0x1b, 0x0d, 0x9b, 0x76,
	0x1b, 0xc5, 0x4a, 0x54, 0xe2, 0x9f, 0xa3, 0x51, 0xee, 0xd2, 0x08, 0x16, 0x54, 0xd8, 0x58, 0xbb,
	0x8a, 0xea, 0x7d, 0x97, 0x46, 0x59, 0xb5, 0x82, 0xb2, 0x17, 0x9e, 0x5a, 0xa0, 0x0a, 0x7f, 0x10,
	0xb5, 0x31, 0x72, 0xf9, 0x39, 0x98, 0xa0, 0xb0, 0xb1, 0x7e, 0x15, 0xa5, 0x16, 0x48, 0xbc, 0xc4,
	0x69, 0xb5, 0x5b, 0x70, 0xd0, 0xb4, 0x62, 0x6d, 0xe2, 0x90, 0x24, 0x2d, 0x3b, 0x06, 0x96, 0x95,
	0x0f, 0xf8, 0x16, 0x42, 0xb5, 0x30, 0x38, 0x72, 0x1d, 0x1a, 0xd4, 0x28, 0x1c, 0x69, 0xf2, 0x56,
	0x8a, 0x92, 0x3e, 0x73, 0x4d, 0x64, 0xce, 0x5c, 0xea, 0xc4, 0x32, 0xf9, 0xbb, 0x9c, 0x58, 0x5e,
	0xa0, 0xc5, 0x5a, 0xe8, 0x37, 0x49, 0xe4, 0xb2, 0x30, 0x90, 0xbe, 0x61, 0x9f, 0x10, 0xaf, 0x25,
	0x0f, 0x42, 0x79, 0x6b, 0xbe, 0xc3, 0x05, 0x47, 0xf9, 0x20, 0x78, 0xf8, 0x57, 0x68, 0xa2, 0x16,
	0x06, 0x9c, 0x9e, 0xf1, 0xf8, 0x9c, 0xf3, 0x68, 0xc0, 0xe8, 0x5b, 0xa0, 0x81, 0x6e, 0x49, 0x81,
	0x97, 0x7a, 0xc3, 0xa6, 0x59, 0xd2, 0xdb, 0xe0, 0x84, 0x78, 0xae, 0x63, 0x29, 0x9d, 0xc5, 0xbf,
	0xcf, 0xa3, 0xf9, 0x6e, 0x35, 0x6f, 0x83, 0xa3, 0x30, 0x7b, 0xa6, 0xcd, 0x0d, 0x3a, 0xd3, 0xe6,
	0xbb, 0x72, 0x67, 0x11, 0xcd, 0x90, 0x9a, 0x58, 0xbc, 0x47, 0x9d, 0x3a, 0x75, 0xc0, 0x5d, 0x26,
	0xad, 0x0c, 0x0d, 0xaf, 0x21, 0xed, 0x88, 0x12, 0xde, 0x12, 0x0d, 0x84, 0x32, 0xb9, 0x3c, 0x9f,
	0x16, 0x14, 0x7d, 0x57, 0x9a, 0xfe, 0x31, 0xba, 0x9e, 0x20, 0x93, 0x73, 0xcd, 0x98, 0xcc, 0xfb,
	0x8a, 0x91, 0x3e, 0xd6, 0x40, 0x92, 0xb0, 0xe1, 0x0c, 0xe2, 0xc4, 0xa7, 0xd6, 0x69, 0xa0, 0x55,
	0x80, 0x24, 0x20, 0x3e, 0x75, 0x88, 0x67, 0xc3, 0xe1, 0x9d, 0xe9, 0x13, 0xe6, 0x88, 0x80, 0x00,
	0x6d, 0x0b, 0x48, 0xc5, 0x63, 0xa4, 0xf7, 0x33, 0x09, 0xa4, 0xbf, 0x3d, 0x84, 0x33, 0x0d, 0x93,
	0xed, 0x06, 0x47, 0x61, 0x9c, 0xc1, 0x6e, 0x5d, 0xbc, 0x33, 0x42, 0xde, 0xd2, 0x0e, 0xbb, 0x28,
	0xc5, 0x43, 0x64, 0x5c, 0x9c, 0xaf, 0xba, 0x32, 0x9d, 0x1c, 0x63, 0x40, 0xa6, 0x7b, 0xda, 0x09,
	0x90, 0x94, 0x5c, 0xf1, 0xfb, 0x25, 0x74, 0xab, 0x1b, 0xba, 0x59, 0xaf, 0x47, 0xb4, 0x4e, 0x38,
	0xad, 0x72, 0xc2, 0x19, 0xfe, 0x25, 0x1a, 0x8f, 0x28, 0x6b, 0x79, 0x3c, 0x1e, 0xe4, 0xd5, 0xc5,
	0x83, 0x64, 0x25, 0x2f, 0x66, 0x5b, 0xb1, 0x46, 0xe3, 0xcb, 0x5e, 0xff, 0x12, 0xa2, 0x18, 0xa3,
	0x51, 0x9f, 0x92, 0x00, 0x5c, 0x2b, 0x6f, 0xc1, 0xdf, 0x10, 0xb5, 0xdc, 0xa1, 0x27, 0x71, 0x46,
	0x95, 0x0f, 0xc6, 0xbf, 0x2c, 0xf4, 0xd6, 0xa3, 0x64, 0x9c, 0x8b, 0xfb, 0xa4, 0xfe, 0x27, 0xe2,
	0xfc, 0x45, 0x27, 0xe2, 0x55, 0x84, 0xa0, 0x30, 0x83, 0x5b, 0xc4, 0x4d, 0x14, 0x94, 0x6a, 0x70,
	0x0a, 0x91, 0xd1, 0x45, 0xca, 0x97, 0x5c, 0xe9, 0xa9, 0x93, 0xa7, 0x6e, 0x20, 0x99, 0xf7, 0x50,
	0x01, 0x8e, 0xeb, 0x1d, 0x84, 0x74, 0x50, 0x68, 0x2d, 0x0e, 0x14, 0xaa, 0xaa, 0x1a, 0xb7, 0x71,
	0xa8, 0x59, 0x5f, 0xfc, 0x68, 0x23, 0x0b, 0xaa, 0xea, 0xfb, 0xde, 0x27, 0x7d, 0xdf, 0xc4, 0x30,
	0xb4, 0xaa, 0xb6, 0xf1, 0xa0, 0xd3, 0x36, 0x4e, 0x0e, 0x43, 0x6f, 0xd2, 0x75, 0x7e, 0x9b, 0xed,
	0x3a, 0xa7, 0x86, 0xa1, 0x3c, 0xdd, 0xb4, 0xfe, 0x32, 0xdd, 0xb4, 0xa2, 0x61, 0x68, 0xef, 0xf4,
	0xbc, 0xef, 0x93, 0x9e, 0x77, 0x7a, 0x48, 0xb6, 0x86, 0x96, 0xf9, 0x9d, 0x6c, 0x99, 0x67, 0x86,
	0xa1, 0x13, 0x3a, 0xee, 0x77, 0xb2, 0xe3, 0x9e, 0x1d, 0x8a, 0x42, 0xd1, 0xb0, 0x7f, 0xec, 0xea,
	0x16, 0x0b, 0xc3, 0xd0, 0x9c, 0x69, 0x36, 0x3f, 0x76, 0xb5, 0x7a, 0x73, 0x43, 0x19, 0x21, 0xdd,
	0x29, 0x7e, 0x9b, 0xed, 0x14, 0xb5, 0xa1, 0x38, 0x5e, 0xaa, 0xd1, 0xfc, 0x36, 0xdb, 0x68, 0x5e,
	0x1f, 0x8a, 0xfe, 0x54, 0x9f, 0xfa, 0x97, 0x97, 0xf5, 0xa9, 0x78, 0x18, 0x23, 0x0e, 0x68, 0x73,
	0xff, 0x3a, 0x77, 0x85, 0x3e, 0xf7, 0xc6, 0x30, 0x26, 0x31, 0xb8, 0x4d, 0x6e, 0xf4, 0x6d, 0x93,
	0xe7, 0x87, 0x31, 0x70, 0x6f, 0x97, 0xed, 0xf4, 0x74, 0xd9, 0x0b, 0xc3, 0x18, 0xa8, 0xab, 0x49,
	0x3f, 0xe8, 0x34, 0xe9, 0x8b, 0x43, 0xc9, 0xb6, 0xaa, 0xc7, 0x3f, 0xec, 0xee, 0xf1, 0x97, 0x86,
	0xa1, 0x3e, 0x7b, 0x45, 0xf0, 0xb1, 0xeb, 0x8a, 0x40, 0x1f, 0x4e, 0x72, 0x48, 0xdd, 0x30, 0x7c,
	0x9b, 0xbd, 0x61, 0x58, 0x1e, 0x4a, 0x68, 0xa5, 0x2e, 0x28, 0x3e, 0x76, 0x5d, 0x50, 0x18, 0x43,
	0x59, 0x41, 0xfa, 0x7e, 0xe3, 0x63, 0xd7, 0xfd, 0xc6, 0xcd, 0xa1, 0x8c, 0x90, 0xbe, 0x1e, 0xf9,
	0x8b, 0x7e, 0xd7, 0x23, 0x2b, 0x43, 0x09, 0x8a, 0x9e, 0xdb, 0x95, 0xc3, 0xee, 0xdb, 0x95, 0xd5,
	0xa1, 0x78, 0x55, 0xe6, 0x72, 0xe6, 0x17, 0xa9, 0x06, 0xe3, 0xd6, 0x50, 0xca, 0x78, 0xd2, 0x9f,
	0x7c, 0x77, 0xd1, 0xdd, 0xce, 0xed, 0x61, 0x8c, 0xd3, 0xef, 0x6a, 0xa8, 0xb8, 0x86, 0x1e, 0x5c,
	0xa8, 0xcb, 0x89, 0x1b, 0x6d, 0xd0, 0x59, 0xfc, 0xbb, 0x31, 0x74, 0x7f, 0xe0, 0xbb, 0x08, 0x8b,
	0xb2, 0x66, 0x18, 0x30, 0x8a, 0x37, 0xc4, 0xa1, 0x5d, 0x50, 0xe0, 0xdc, 0x3b, 0xbd, 0x61, 0x5c,
	0x3c, 0x6f, 0x2b, 0x46, 0xe2, 0x3a, 0x9a, 0x8c, 0x62, 0x79, 0x38, 0x09, 0x17, 0x36, 0x3e, 0xcf,
	0x4a, 0x5d, 0x3a, 0xec, 0xd3, 0xd7, 0xea, 0xaf, 0x97, 0x5a, 0xc3, 0xa6, 0x6f, 0x03, 0x4e, 0xa3,
	0x80, 0x78, 0xaf, 0xa3, 0x28, 0x8c, 0xac, 0x44, 0x39, 0xfe, 0x39, 0x9a, 0x23, 0x6a, 0x81, 0x22,
	0xf9, 0x24, 0x37, 0x35, 0x6b, 0x57, 0xb5, 0xae, 0x55, 0x20, 0xd9, 0x26, 0x65, 0x03, 0x8d, 0x42,
	0xaf, 0x35, 0x0a, 0x7a, 0x2e, 0xeb, 0xb5, 0x00, 0x5b, 0xfc, 0xd7, 0x3c, 0x9a, 0x4a, 0x26, 0x8c,
	0xe7, 0x51, 0xcf, 0x94, 0xb5, 0x6b, 0xb8, 0x80, 0x50, 0xc3, 0xa6, 0x55, 0xe9, 0xe4, 0x5a, 0x2e,
	0x7e, 0xde, 0x0f, 0xc3, 0x57, 0x2d, 0x76, 0xae, 0xe5, 0xf1, 0x1c, 0x9a, 0x6e, 0xd8, 0x74, 0xdb,
	0x65, 0xe4, 0xd0, 0xa3, 0x8e, 0x36, 0x82, 0x97, 0xd0, 0x8d, 0x86, 0x4d, 0x2b, 0x34, 0xf2, 0x5d,
	0xc6, 0x5c, 0xd1, 0xac, 0x07, 0x2e, 0x75, 0xb4, 0x51, 0x7c, 0x0b, 0x19, 0x0d, 0x9b, 0x7e, 0x1d,
	0xf2, 0x6a, 0xeb, 0x90, 0xd5, 0x22, 0xf7, 0x90, 0x3a, 0xfb, 0xe1, 0x76, 0xc8, 0x49, 0xc5, 0x6b,
	0x31, 0x6d, 0x0c, 0xeb, 0x68, 0x1e, 0xc6, 0x87, 0x16, 0xbc, 0x42, 0x22, 0xe2, 0x53, 0x4e, 0x23,
	0xa6, 0x8d, 0xe3, 0x55, 0xb4, 0x0c, 0x57, 0x06, 0x62, 0x88, 0xfd, 0x70, 0x87, 0x72, 0x21, 0x51,
	0x6d, 0x1d, 0x8a, 0xa5, 0x68, 0x13, 0xf8, 0x36, 0xba, 0x99, 0x62, 0xef, 0x85, 0xc4, 0x49, 0xaf,
	0x57, 0x9b, 0xec, 0x02, 0x54, 0xc9, 0x09, 0xcd, 0x00, 0xa6, 0xf0, 0x0a, 0xd2, 0xb3, 0x03, 0x24,
	0xc6, 0x66, 0x1a, 0xc2, 0x37, 0xd1, 0x92, 0x9c, 0xf8, 0xeb, 0x20, 0x6c, 0xd5, 0x8f, 0x77, 0x3a,
	0xed, 0xb2, 0x36, 0x5d, 0xfc, 0xcf, 0x3c, 0x7a, 0x3c, 0xd0, 0x35, 0xba, 0x9a, 0xc9, 0x73, 0xd4,
	0xd9, 0x39, 0xbb, 0x41, 0xcf, 0x55, 0xe7, 0x6a, 0x5d, 0xd1, 0xd3, 0xae, 0xda, 0x61, 0x7e, 0x45,
	0xcf, 0xad, 0x59, 0x92, 0x7a, 0x62, 0x3f, 0xfe, 0x3d, 0x9c, 0xe8, 0x46, 0xe1, 0xca, 0x56, 0x76,
	0x76, 0xf0, 0xb7, 0x71, 0x84, 0x56, 0x06, 0x0d, 0x3e, 0xac, 0xce, 0xb3, 0xf8, 0xcf, 0x23, 0xe8,
	0xf9, 0x6f, 0x61, 0x11, 0x6b, 0x40, 0x8c, 0xe5, 0x7e, 0xc7, 0x18, 0x6b, 0xf5, 0xe4, 0x87, 0x9d,
	0x1f, 0xb5, 0x6b, 0xbf, 0x5d, 0xb6, 0x28, 0xfe, 0x26, 0xf7, 0x87, 0x0c, 0x53, 0xa5, 0xbf, 0x13,
	0x86, 0x22, 0x38, 0x07, 0x07, 0xef, 0x78, 0xf1, 0x15, 0xba, 0x33, 0xd0, 0x00, 0x70, 0x69, 0x36,
	0xf8, 0x3d, 0x71, 0xf1, 0xfb, 0x11, 0xf4, 0xe8, 0x52, 0x25, 0x89, 0x1d, 0x7e, 0x81, 0x96, 0x7a,
	0xaf, 0x9a, 0x6c, 0xcf, 0x65, 0x2a, 0xe3, 0x17, 0x07, 0xe7, 0xc0, 0x3d, 0x97, 0x71, 0x6b, 0xfe,
	0xb0, 0xdf, 0x2d, 0x56, 0xa3, 0x67, 0x9f, 0xbf, 0xb8, 0xe2, 0x3e, 0xa7, 0x67, 0x78, 0xc5, 0xdd,
	0xfd, 0x21, 0xf7, 0x47, 0x94, 0x84, 0x8b, 0xbf, 0xce, 0x75, 0x17, 0xd8, 0xcd, 0xce, 0xc5, 0xe4,
	0x1f, 0xe6, 0xa5, 0xff, 0xbf, 0x8f, 0xa0, 0x4f, 0xae, 0x34, 0x85, 0xc4, 0x68, 0x61, 0x6a, 0xbf,
	0x72, 0xb0, 0x5f, 0x9b, 0x17, 0xed, 0xd7, 0x25, 0xaa, 0xae, 0x58, 0xbf, 0xef, 0xa3, 0x02, 0xbc,
	0x5b, 0x62, 0x36, 0x11, 0x9d, 0x04, 0x75, 0xe2, 0x15, 0xce, 0x4a, 0xea, 0xa6, 0x24, 0x16, 0x7f,
	0xf8, 0x7d, 0xd4, 0xd7, 0x18, 0xe0, 0xfa, 0x34, 0x6c, 0x71, 0x6d, 0xf4, 0xa2, 0xad, 0x1e, 0xbb,
	0xac, 0x2c, 0x8e, 0x63, 0x03, 0x2d, 0x36, 0x6c, 0xba, 0xe9, 0x45, 0x94, 0x38, 0xe7, 0x29, 0xc3,
	0x38, 0xda, 0x44, 0x3c, 0x59, 0x75, 0x4b, 0xaf, 0x0a, 0xe9, 0x60, 0xef, 0x99, 0x1a, 0x54, 0x29,
	0x51, 0xf1, 0xaf, 0x72, 0x97, 0x84, 0x77, 0x99, 0xf0, 0xda, 0xf1, 0xae, 0xcb, 0x78, 0x18, 0x9d,
	0xff, 0xfe, 0xdc, 0xeb, 0xfb, 0x11, 0xf4, 0xec, 0xca, 0xd3, 0x48, 0x36, 0x8f, 0xf5, 0xb8, 0xd8,
	0xeb, 0x2b, 0xa6, 0x84, 0x7e, 0xea, 0xae, 0xe8, 0x66, 0x9f, 0xab, 0x57, 0x80, 0x79, 0x48, 0x68,
	0x77, 0x2f, 0x79, 0x05, 0x08, 0x19, 0x4d, 0x4a, 0x14, 0xff, 0x29, 0xf7, 0xff, 0xe9, 0x7a, 0x97,
	0x54, 0x8b, 0xf5, 0xff, 0xd6, 0x7b, 0x2f, 0xdd, 0x53, 0x6f, 0xc5, 0xce, 0x9b, 0x14, 0x3f, 0x02,
	0x57, 0xca, 0xd0, 0xe2, 0x9a, 0xa4, 0xfd, 0xaf, 0xfa, 0x97, 0x33, 0x46, 0xfe, 0xad, 0x94, 0xc3,
	0x77, 0x51, 0xa1, 0x61, 0x53, 0x61, 0x81, 0x03, 0x37, 0x88, 0x08, 0xa7, 0xda, 0x35, 0x63, 0xae,
	0x5d, 0x9a, 0x11, 0x14, 0x33, 0x26, 0xc5, 0xa0, 0x3d, 0x79, 0xe3, 0x0c, 0xa0, 0x1c, 0x80, 0x04,
	0x25, 0x01, 0xdd, 0x83, 0x15, 0x97, 0xcb, 0x16, 0xbc, 0x61, 0xd2, 0xf2, 0xc6, 0x8d, 0x76, 0x49,
	0xb3, 0xe0, 0x7b, 0x14, 0xb3, 0x5c, 0xb6, 0x4c, 0xf9, 0x86, 0x72, 0x03, 0x61, 0xb1, 0xba, 0x96,
	0xbf, 0x4b, 0xa3, 0x30, 0x71, 0xf0, 0x11, 0xc3, 0x68, 0x97, 0x96, 0xbe, 0x6e, 0xf9, 0x87, 0x34,
	0x32, 0xc3, 0x23, 0x53, 0x32, 0xcd, 0xf8, 0xbd, 0xca, 0xa7, 0xe8, 0xba, 0x94, 0x49, 0xc7, 0xc4,
	0xa8, 0xb1, 0xdc, 0x2e, 0x2d, 0x76, 0x44, 0x80, 0xa7, 0x24, 0x7e, 0x0a, 0x87, 0xde, 0xcd, 0x13,
	0x1a, 0x91, 0x3a, 0xad, 0x24, 0x37, 0x5d, 0xfb, 0xa4, 0x41, 0x03, 0x6d, 0xcc, 0x58, 0x69, 0x97,
	0x96, 0x63, 0xa6, 0x09, 0x5c, 0x13, 0xd8, 0x26, 0xf0, 0xf1, 0x17, 0xb0, 0x01, 0x31, 0xff, 0x55,
	0xe7, 0x9e, 0x4f, 0x4a, 0x8f, 0x1b, 0xab, 0xed, 0x92, 0xa1, 0xa4, 0x25, 0x3b, 0x23, 0xfe, 0x33,
	0x38, 0x0f, 0xef, 0x87, 0x9c, 0x78, 0xa2, 0x43, 0x8b, 0x6f, 0xbc, 0xde, 0xb8, 0x11, 0xe3, 0xda,
	0x84, 0x71, 0xa7, 0x5d, 0xba, 0x05, 0x3c, 0x13, 0x18, 0xe6, 0xfe, 0x33, 0x33, 0xb9, 0x7f, 0x32,
	0x01, 0x84, 0x9f, 0x82, 0x67, 0x00, 0x28, 0xd5, 0xe8, 0x69, 0x93, 0xc6, 0x42, 0xbb, 0x84, 0xa5,
	0xac, 0xa4, 0x9b, 0xea, 0x73, 0x8d, 0x39, 0x85, 0xdf, 0x96, 0x97, 0x33, 0xda, 0x94, 0xa1, 0xb5,
	0x4b, 0xb3, 0x12, 0x1b, 0xd3, 0xf0, 0xa7, 0xd0, 0x22, 0x00, 0x6d, 0x2b, 0x75, 0xc9, 0xa2, 0x21,
	0x63, 0xb1, 0x5d, 0xba, 0x21, 0xb1, 0xc0, 0x30, 0xd5, 0xf5, 0xcb, 0x03, 0x50, 0x5c, 0x26, 0x67,
	0x07, 0x6e, 0xc0, 0x78, 0x44, 0x49, 0x43, 0x9b, 0x36, 0xae, 0xb7, 0x4b, 0x85, 0x32, 0x39, 0x13,
	0xdb, 0x6e, 0x56, 0x81, 0x88, 0x1f, 0xc1, 0xfe, 0xc4, 0x26, 0x51, 0x53, 0x98, 0x31, 0x70, 0xbb,
	0x34, 0xa7, 0xec, 0xa4, 0x26, 0x21, 0xe7, 0x1a, 0x53, 0xe5, 0xba, 0x66, 0x61, 0xae, 0x0a, 0x28,
	0x97, 0xb4, 0x2a, 0x7d, 0x89, 0x9c, 0x49, 0x48, 0xc1, 0x98, 0x69, 0x97, 0xa6, 0xc4, 0xa8, 0x92,
	0x9d, 0x19, 0x70, 0x53, 0x5e, 0xff, 0x6b, 0x73, 0x99, 0x01, 0x63, 0x2a, 0xbe, 0x83, 0x66, 0xa5,
	0x26, 0x05, 0xd3, 0x8c, 0x42, 0xbb, 0x34, 0x2d, 0x74, 0x29, 0xc8, 0x43, 0x08, 0xf0, 0x64, 0xfa,
	0x84, 0x1f, 0x33, 0xed, 0x3a, 0xac, 0xb3, 0x33, 0x7b, 0x78, 0x73, 0x71, 0x1b, 0xcd, 0x08, 0x5d,
	0x6e, 0x10, 0x83, 0xb0, 0x31, 0xdb, 0x2e, 0xa1, 0xb2, 0x1b, 0x28, 0xc0, 0x0b, 0x59, 0x14, 0xa4,
	0x54, 0xc6, 0xc8, 0x37, 0x0c, 0xbd, 0x5d, 0x5a, 0x50, 0xfa, 0xb2, 0x66, 0x5e, 0x83, 0xf1, 0x61,
	0x03, 0xf6, 0xe2, 0xf7, 0x01, 0xda, 0x3c, 0x2c, 0x46, 0x6e, 0x8a, 0x20, 0x9a, 0xf0, 0x96, 0xe0,
	0x09, 0x04, 0x4f, 0xac, 0x25, 0xc1, 0x2e, 0x18, 0xf3, 0xed, 0xd2, 0x75, 0xa5, 0xbb, 0x83, 0x96,
	0x51, 0x1b, 0xfb, 0x45, 0xe0, 0x52, 0xa6, 0x2d, 0x42, 0xd4, 0x2a, 0xb7, 0x80, 0x37, 0x04, 0x5d,
	0x8b, 0x07, 0xd8, 0x52, 0xd7, 0xe2, 0x01, 0xf8, 0x1d, 0x32, 0x95, 0x36, 0x08, 0xb5, 0x03, 0x97,
	0x1f, 0x4b, 0x37, 0xdc, 0x74, 0x4e, 0x48, 0xc0, 0x49, 0x9d, 0x6a, 0xba, 0xf1, 0x55, 0xbb, 0xb4,
	0x2b, 0xf5, 0xcb, 0x78, 0x14, 0x28, 0xe5, 0xad, 0x09, 0xce, 0x5c, 0x83, 0x30, 0x8d, 0x4c, 0x4e,
	0x89, 0x6f, 0x36, 0x5c, 0xcf, 0xa3, 0x8e, 0x02, 0xf9, 0x61, 0x44, 0xe1, 0x2e, 0x98, 0x3d, 0xc2,
	0xdf, 0xa1, 0xa2, 0x4c, 0x91, 0x35, 0x1a, 0xf0, 0x0b, 0x07, 0x5d, 0x36, 0xde, 0xb6, 0x4b, 0x6f,
	0x2a, 0x35, 0x3e, 0x8c, 0x21, 0x33, 0x3b, 0x58, 0x4d, 0xdd, 0x1a, 0x69, 0x46, 0x66, 0x07, 0x05,
	0xcb, 0x4c, 0x6e, 0x94, 0x52, 0xa1, 0x95, 0x91, 0xb9, 0x99, 0x0a, 0xad, 0xac, 0xc4, 0x4f, 0x20,
	0x43, 0xc7, 0xda, 0xf6, 0xd3, 0x37, 0xb6, 0xda, 0x0a, 0x24, 0x36, 0x35, 0x50, 0xc2, 0x33, 0xe1,
	0x3a, 0x77, 0x03, 0x2d, 0xa8, 0x91, 0xb2, 0x52, 0xab, 0xc6, 0x52, 0xbb, 0x34, 0x2f, 0x87, 0xea,
	0x92, 0x91, 0xb3, 0x8b, 0x15, 0xee, 0x26, 0x77, 0x93, 0xda, 0x2d, 0x98, 0x9d, 0x1a, 0x48, 0x30,
	0xcc, 0xf8, 0xc6, 0x4f, 0xfa, 0x19, 0x28, 0x4b, 0xe1, 0x6f, 0x83, 0x9f, 0xc9, 0x21, 0xd2, 0x68,
	0x39, 0xa7, 0x94, 0xfe, 0xf8, 0x6a, 0x52, 0x33, 0x61, 0x4e, 0x99, 0x01, 0xd4, 0xad, 0x65, 0x2a,
	0xc7, 0xa5, 0x25, 0xee, 0xa4, 0x72, 0x5c, 0x06, 0x9f, 0x19, 0x63, 0xbf, 0x73, 0x39, 0xa9, 0x15,
	0x33, 0x63, 0x00, 0x47, 0xcd, 0x2b, 0x35, 0x46, 0x5a, 0xe2, 0x6e, 0x6a, 0x8c, 0x0c, 0x5e, 0xc6,
	0x61, 0x99, 0x9c, 0xed, 0x85, 0x8c, 0xc9, 0xd4, 0xa6, 0xdd, 0x83, 0x38, 0x14, 0xd9, 0x42, 0x10,
	0x55, 0xc2, 0xcb, 0x78, 0x89, 0xf0, 0xba, 0x64, 0xc7, 0xef, 0x67, 0xbc, 0x04, 0x8a, 0x68, 0xb2,
	0xe7, 0xd2, 0xaa, 0x65, 0x72, 0x96, 0x91, 0x78, 0x00, 0x56, 0x15, 0x23, 0xf4, 0x45, 0xbb, 0x41,
	0x06, 0xfd, 0x50, 0xa2, 0xdd, 0xa0, 0x0b, 0x9d, 0xb1, 0xcf, 0x81, 0xdb, 0x71, 0xc1, 0xb5, 0x8c,
	0x7d, 0x44, 0xd2, 0x4e, 0x64, 0xd6, 0x21, 0x8b, 0xca, 0xf4, 0x9e, 0xe0, 0x1f, 0x41, 0xd9, 0x56,
	0x09, 0xbe, 0x1b, 0xeb, 0x06, 0x69, 0xec, 0xba, 0xc4, 0xba, 0x41, 0x16, 0x9b, 0xb1, 0x8e, 0x30,
	0x5b, 0x22, 0xf0, 0x38, 0x63, 0x1d, 0xb0, 0x68, 0xaf, 0x75, 0x32, 0x12, 0x4f, 0x12, 0xeb, 0xf4,
	0x45, 0xcb, 0x4f, 0xa7, 0x12, 0xf4, 0x27, 0x89, 0x75, 0xb2, 0xe8, 0x32, 0x5a, 0x11, 0x89, 0xa4,
	0x26, 0x93, 0x88, 0x7a, 0x07, 0x25, 0xaa, 0xb5, 0x2c, 0xcb, 0x4f, 0x8d, 0xc7, 0xed, 0xd2, 0x5a,
	0x57, 0x0a, 0x91, 0xf5, 0x19, 0x8e, 0x38, 0xfb, 0xcf, 0x64, 0x6d, 0x8f, 0x0b, 0x74, 0x32, 0xd5,
	0x4c, 0x8a, 0xff, 0x93, 0x64, 0xaa, 0xd9, 0xf4, 0x9e, 0x54, 0x20, 0x55, 0x19, 0x3f, 0x4d, 0x2a,
	0x90, 0xaa, 0x8a, 0xc9, 0x4e, 0xa4, 0xeb, 0xfd, 0xb3, 0x64, 0x27, 0x32, 0xd5, 0xfe, 0x33, 0xb0,
	0x6e, 0x99, 0x9c, 0xf5, 0x9c, 0x4c, 0x36, 0x20, 0x71, 0x08, 0x81, 0x3e, 0xa7, 0x92, 0xe7, 0xe0,
	0x20, 0x65, 0x72, 0xd6, 0x7d, 0x1a, 0x7a, 0x0e, 0x7b, 0x22, 0xa4, 0x7a, 0x4f, 0x42, 0x71, 0xc1,
	0x13, 0x53, 0x87, 0x82, 0xf7, 0x42, 0x16, 0x3c, 0x98, 0x39, 0x14, 0xbc, 0x7b, 0x50, 0x62, 0xc4,
	0xa6, 0xa9, 0x62, 0xf4, 0x19, 0x54, 0x73, 0xd8, 0xb0, 0xa4, 0x10, 0xa5, 0xd4, 0x40, 0x7d, 0xf9,
	0x49, 0x4a, 0x0d, 0xd4, 0x16, 0x59, 0xcf, 0x2d, 0xe2, 0xb8, 0x24, 0xe0, 0x07, 0x6e, 0x60, 0x89,
	0x23, 0xe6, 0x9f, 0x42, 0xe8, 0xc5, 0xc4, 0xae, 0xa3, 0xe8, 0xb6, 0x1b, 0x51, 0x85, 0xfb, 0x33,
	0x28, 0x6a, 0x82, 0x92, 0x80, 0x64, 0xe4, 0xc7, 0xa2, 0x3b, 0xea, 0x43, 0x0b, 0xed, 0x73, 0x88,
	0x7c, 0xa5, 0x11, 0x02, 0x48, 0x7e, 0x3e, 0x21, 0x23, 0x5f, 0xa8, 0xe8, 0x80, 0x5f, 0xc2, 0xf0,
	0xa0, 0x36, 0x85, 0xbc, 0x97, 0x2c, 0x45, 0x26, 0x93, 0x9f, 0x26, 0xf9, 0x21, 0x9d, 0x11, 0x93,
	0x2d, 0x57, 0x79, 0xed, 0xcf, 0x93, 0x2d, 0x57, 0x09, 0x2d, 0xd9, 0xf2, 0x74, 0x6a, 0xfa, 0x22,
	0xd9, 0xf2, 0x4c, 0x62, 0x92, 0xea, 0x54, 0xba, 0xa9, 0x94, 0xb5, 0x12, 0xa8, 0x4b, 0xb2, 0x4c,
	0xa5, 0x8c, 0x97, 0xd1, 0x54, 0x9c, 0x5b, 0x2a, 0x65, 0xed, 0x67, 0x06, 0x6a, 0x97, 0x26, 0x20,
	0xa5, 0x54, 0xca, 0x59, 0xe9, 0x6f, 0x2a, 0x65, 0xed, 0xcb, 0x8c, 0xf4, 0x37, 0x69, 0x69, 0xc1,
	0xde, 0x4c, 0xa4, 0xbf, 0xa9, 0x94, 0xd7, 0xff, 0x36, 0x87, 0x8a, 0x97, 0x7f, 0xde, 0x87, 0xef,
	0xa2, 0x7e, 0x1f, 0xf8, 0x69, 0xd7, 0x40, 0x97, 0xfa, 0x06, 0x72, 0x15, 0xcc, 0x9c, 0x80, 0x84,
	0xc5, 0xb4, 0x9c, 0x31, 0xd1, 0x2e, 0x8d, 0x8a, 0x3f, 0xbb, 0xd9, 0x56, 0xe8, 0x51, 0x2d, 0x0f,
	0x6c, 0xf1, 0xe7, 0xfa, 0x7f, 0xe4, 0xfa, 0xfc, 0x9e, 0x41, 0x70, 0xb0, 0x89, 0xba, 0xbe, 0x8a,
	0xeb, 0xe9, 0x72, 0xe4, 0x79, 0xb2, 0x4a, 0x8e, 0xa8, 0x47, 0x02, 0xd1, 0xe2, 0x88, 0xf3, 0xa4,
	0x78, 0x84, 0xf8, 0xc6, 0x37, 0xa1, 0x37, 0x2b, 0xbb, 0x0e, 0x70, 0x73, 0xc6, 0x74, 0xbb, 0x34,
	0x59, 0x76, 0x9d, 0x34, 0xf3, 0xdd, 0xd1, 0x11, 0x30, 0xf3, 0xc0, 0x7c, 0x77, 0x74, 0x24, 0x99,
	0xd2, 0x1d, 0xab, 0xe1, 0x11, 0xaf, 0xca, 0xb7, 0x8a, 0xda, 0x08, 0xb8, 0xa3, 0xa0, 0x98, 0x31,
	0x29, 0x06, 0xed, 0x92, 0xc8, 0x51, 0xa0, 0x51, 0x00, 0x09, 0x8a, 0x02, 0xad, 0xff, 0x4d, 0x1e,
	0xdd, 0xbe, 0xe4, 0xa3, 0x3b, 0xbc, 0x8e, 0x2e, 0xfc, 0xec, 0xae, 0x67, 0xc9, 0x0f, 0xe4, 0xc1,
	0xee, 0x90, 0x85, 0x5e, 0x8b, 0x53, 0xf8, 0xe0, 0x4f, 0xbb, 0x06, 0xc1, 0xf9, 0x4e, 0xec, 0xbc,
	0xe7, 0x99, 0xf2, 0x23, 0xc0, 0x0d, 0x38, 0x89, 0xc8, 0xd3, 0x11, 0x7b, 0x77, 0x54, 0x75, 0x7d,
	0xd7, 0x23, 0x91, 0xe8, 0xdb, 0xb4, 0x1c, 0xc4, 0xcb, 0x07, 0x66, 0x8a, 0x27, 0xb3, 0x12, 0x36,
	0x5b, 0x9e, 0xcc, 0xa7, 0xf7, 0xa4, 0x4b, 0x79, 0x5e, 0x2c, 0xa6, 0xe5, 0xe1, 0xc4, 0xf8, 0x81,
	0x99, 0x9b, 0x9e, 0x67, 0xc6, 0x44, 0xfc, 0x19, 0x34, 0x61, 0xf1, 0x53, 0x85, 0x46, 0x2c, 0x0c,
	0x88, 0x17, 0x37, 0xf3, 0xda, 0x08, 0x1c, 0x3e, 0x3e, 0x30, 0x53, 0x31, 0xcc, 0x98, 0xb3, 0xfe,
	0x3f, 0xb9, 0x81, 0xfd, 0xad, 0x4b, 0x23, 0xfc, 0x09, 0xea, 0xf7, 0xdd, 0x67, 0xda, 0x04, 0x62,
	0x93, 0x04, 0xd9, 0xdc, 0x0b, 0x4f, 0xf1, 0x2a, 0x1c, 0x80, 0x32, 0xf0, 0xaf, 0x43, 0x70, 0x03,
	0xb0, 0x94, 0x09, 0xa1, 0x98, 0x61, 0x3f, 0xd3, 0x72, 0xc6, 0x54, 0xbb, 0x34, 0x0e, 0x2a, 0x9e,
	0xf5, 0x43, 0x6c, 0x68, 0xf9, 0x0e, 0x62, 0xa3, 0x1f, 0xe2, 0xb9, 0x36, 0xd2, 0x41, 0x3c, 0xc7,
	0xf7, 0x21, 0x6f, 0x67, 0x10, 0x5b, 0x2d, 0xc6, 0x43, 0x5f, 0x1b, 0x05, 0x98, 0x7c, 0x58, 0xff,
	0x21, 0x87, 0xcc, 0xcb, 0x3e, 0x4f, 0xc5, 0x77, 0x50, 0x9f, 0x0f, 0x54, 0xb5, 0x6b, 0x52, 0x0f,
	0x3c, 0xe0, 0xfb, 0xd9, 0x35, 0xbf, 0x0f, 0xe4, 0xcf, 0xa5, 0x62, 0xe7, 0x56, 0x8f, 0x3d, 0x31,
	0x47, 0xa2, 0x24, 0xe6, 0x48, 0x44, 0xd7, 0x5f, 0xf4, 0xf9, 0x5c, 0x5b, 0xfd, 0xe0, 0x05, 0x23,
	0x14, 0xff, 0xe4, 0x45, 0xbb, 0x86, 0xa7, 0xd1, 0x44, 0xc3, 0x86, 0x62, 0xaf, 0xe5, 0xd6, 0x5b,
	0xf2, 0x37, 0x4f, 0x17, 0xfe, 0xb4, 0x05, 0x17, 0x51, 0xff, 0x1f, 0xb7, 0xa4, 0x76, 0x30, 0xbe,
	0x2f, 0x39, 0x08, 0x81, 0xaf, 0x5d, 0x8b, 0x2f, 0x54, 0xf6, 0x42, 0xc6, 0x81, 0x90, 0x8b, 0x09,
	0xaf, 0x4f, 0xa8, 0x44, 0xe4, 0x5f, 0x8d, 0xed, 0xe6, 0x7e, 0x9d, 0xbb, 0xf6, 0x7f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xcb, 0xd0, 0x10, 0x06, 0x8d, 0x36, 0x00, 0x00,
}
